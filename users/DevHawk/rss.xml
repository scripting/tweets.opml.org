<?xml version="1.0" encoding="UTF-8"?>
<!-- RSS generated by opmltweets v1.4.10 on Sun, 20 Mar 2022 05:11:09 GMT -->
<rss version="2.0" xmlns:source="http://source.scripting.com/">
	<channel>
		<title>DevHawk tweets</title>
		<link>http://twitter.com/DevHawk</link>
		<description>A feed of recent tweets from DevHawk.</description>
		<pubDate>Sun, 20 Mar 2022 05:06:59 GMT</pubDate>
		<language>en-us</language>
		<generator>opmltweets v1.4.10</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<lastBuildDate>Sun, 20 Mar 2022 05:11:09 GMT</lastBuildDate>
		<cloud domain="rpc.rsscloud.io" port="5337" path="/pleaseNotify" registerProcedure="" protocol="http-post" />
		<source:account service="twitter">DevHawk</source:account>
		<source:localTime>Sun, March 20, 2022 1:11 AM EDT</source:localTime>
		<item>
			<description>Its a crime that don't get a new @NeillBlomkamp movie every year or two.&#10;&#10;</description>
			<pubDate>Sun, 20 Mar 2022 05:06:59 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1505410551236612096</link>
			<guid>https://twitter.com/DevHawk/status/1505410551236612096</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Minor update to @Neo_Blockchain Smart Contract Debugger preview published. Watch Window expression evaluation now leverages type information. Now can watch specific struct fields or specific list/map items. Compound expressions also supported, as shown in this screenshot https://t.co/Gg1Ou6eIYp&#10;&#10;</description>
			<pubDate>Thu, 17 Mar 2022 18:00:50 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1504518135184977922</link>
			<guid>https://twitter.com/DevHawk/status/1504518135184977922</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@roschler @john_devadoss https://t.co/iRRw9WWraE&#10;&#10;</description>
			<pubDate>Wed, 16 Mar 2022 13:28:45 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1504087273842782208</link>
			<guid>https://twitter.com/DevHawk/status/1504087273842782208</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>For @Neo_Blockchain developers wanting to try out the new Storage Schema preview, I've posted more detailed getting started instructions https://t.co/VTZWtD6Wz2&#10;&#10;</description>
			<pubDate>Tue, 15 Mar 2022 21:33:18 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1503846827547799552</link>
			<guid>https://twitter.com/DevHawk/status/1503846827547799552</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>We just shipped a major update to the #NeoBlockchainToolkit Smart Contract Debugger today. It's not completely baked yet, so we are shipping it as a preview.&#10;Let me tell you why running the preview is TOTALLY worth it. (1/20)&#10;&#10;A few weeks ago, I started working on improving the developer experience for contract storage in the debugger. Every Neo contract has its own &quot;private&quot; key/value store where it can persist data it needs to do its job. Fungible token balances, NFT details, stuff like that. (2/20)&#10;&#10;Note, &quot;private&quot; in quotes because no data on the blockchain is private. A core point of blockchain is to publish a publicly visible cryptographically authenticated record. But contract data is only visible from outside and only the contract can modify its key/value store. (3/20)&#10;&#10;Anyway, key/value data stores are simple and flexible, but they are a pain to inspect. The key and value are just streams of bytes. And that's how the Neo Contract Debugger has traditionally displayed contract storage. An accurate view, but not a useful or productive view. (4/20) https://t.co/KRqGnHkrRA&#10;&#10;Contract storage *is* structured - even if the structure isn't visible at the storage layer. Keys typically have a constant prefix followed by zero or more typed key segments. Values are also consistently typed. (5/20)&#10;&#10;For example: a fungible token might store token balances as integers with a constant prefix + user's address as the key. An NFT key/value pair might store information about a specific token (name, URL, owner, etc.) in a serialized structure keyed to token's unique ID. (6/20)&#10;&#10;I set out to provide what @roschler called &quot;deep inspection&quot; of contract storage. I wanted the debugger to automatically decode each key segment and the value, giving the developer a logical view of storage with types rather than the physical view of raw bytes. (7/20)&#10;&#10;We actually shipped the first preview of &quot;Storage Schema&quot; about a week ago. I didn't make much noise at the time because I wasn't satisfied. The deep inspection experience worked but required the developer to specify the schema information by hand. (8/20)&#10;&#10;Writing JSON by hand to describe a contract's storage schema was fine for a proof of concept. However, I wanted tools to generate the schema information automatically. So I started updating the Neo C# compiler.&#10;&#10;That's when things got ... interesting. (9/20)&#10;&#10;Neo contracts are written in mainstream programming languages such as C#, Java and Python but run on the Neo virtual machine. There are compilers from various parts of the Neo community for each of these languages that emit Neo VM bytecode - including the Neo C# compiler. (10/20)&#10;&#10;The original Neo Legacy C# compiler translated .NET IL to Neo VM byte code. For Neo N3, @neoerikzhang wrote a new compiler that works directly against C# source using Roslyn.&#10;&#10;This turned out to be serendipitous for my Storage Schema efforts. (11/20)&#10;&#10;The type model used to describe *storage* types could also describe *runtime* types as well! With the Roslyn based compiler, all the rich C# semantic information was readily available.&#10;&#10;Updating the compiler to emit runtime type information was pretty straightforward. (12/20)&#10;&#10;Automatically generating storage type info was *harder* than runtime type info!&#10;&#10;Storage schema of a C# Neo contract is done with imperative code. I didn't try to reverse engineer storage schema from C# source. I added custom attributes to capture storage schema instead. (13/20)&#10;&#10;Here's what the new Storage Schema attributes look like in action: (14/20) https://t.co/U6KsT3Edm4&#10;&#10;This attribute-based approach is very much a first draft. It's simple and it works, but I'm not convinced it's the best approach. We are shipping this update as a preview so we can iterate and get feedback on the design. (15/20)&#10;&#10;There is also a sample contract where you can see the new experience in action. Install preview debugger, clone, build and run...err, debug.&#10;&#10;This link will get you started: https://t.co/2ygtod7Lv2 (16/20)&#10;&#10;Here's a screen shot of the same contract's variables window from earlier in the thread, but now using the Neo Debugger Preview.&#10;&#10;I like to think this is a dramatic improvement over looking at raw byte streams! (17/20) https://t.co/HXbe57nZiQ&#10;&#10;If you're a @Neo_Blockchain developer using C#, please give the new debugger preview a test drive.&#10;&#10;Feedback is always appreciated, but it's especially valuable for preview releases like this.&#10;&#10;I'm easy to find on the official Neo Discord: https://t.co/SYrmRzIa17 (18/20)&#10;&#10;And I haven't forgotten about non-C# @Neo_Blockchain developers. Now that the preview is out, I'm reaching out to other compiler teams. I'm happy to help them update their tools to emit to the updated debugger info that drives this improved Storage Schema experience.  (19/20)&#10;&#10;Now's a great time to get started as a @Neo_Blockchain developer. The Polaris Launchpad Hackathon just started last week. More details here: https://t.co/nsdj4fXH09&#10;&#10;Anyway, thanks for reading this far. Let me know what you think of the new preview.&#10;&#10;(END TRANSMISSION)&#10;&#10;P.S. @code makes it really easy to switch back and forth between production and pre-release extensions. So even if you're worried about running preview debugger full time, it's easy enough to switch back. More details in the VSCode 1.63 release notes: https://t.co/hIjhPucWer&#10;&#10;</description>
			<pubDate>Mon, 14 Mar 2022 22:59:02 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1503506015337164803</link>
			<guid>https://twitter.com/DevHawk/status/1503506015337164803</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@patrickallmond After 3 months off? Probably not. But maybe in a couple months&#10;&#10;</description>
			<pubDate>Sun, 13 Mar 2022 00:20:04 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1502801631183659008</link>
			<guid>https://twitter.com/DevHawk/status/1502801631183659008</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@patrickallmond Gotta catch back up to you before you decide to come out this way again. Cant have you show me up in my home gym. ðŸ˜…&#10;&#10;</description>
			<pubDate>Sat, 12 Mar 2022 17:50:17 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1502703542049538049</link>
			<guid>https://twitter.com/DevHawk/status/1502703542049538049</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@GrabowskiDylan Yeah, took me out for most of Feb. Got over the worst of it in a few days, but then was easily exhausted for weeks&#10;&#10;</description>
			<pubDate>Sat, 12 Mar 2022 17:49:07 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1502703248557285378</link>
			<guid>https://twitter.com/DevHawk/status/1502703248557285378</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Finally got back to the gym this week after nearly 3 months. Holidays, omicron wave, getting covid anyway despite precautions and trip east have kept me away too long. I'm sore, but that will pass soon enough. https://t.co/s0UFFh44cc&#10;&#10;</description>
			<pubDate>Sat, 12 Mar 2022 17:32:13 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1502698992316010496</link>
			<guid>https://twitter.com/DevHawk/status/1502698992316010496</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Like last time, I'll be spending a lot of my time during the Neo Polaris Launchpad Hackathon (https://t.co/nsdj4fXH09) helping participants and answering questions about @Neo_Blockchain development and the Neo Blockchain Toolkit. https://t.co/wvGWX7OclY&#10;&#10;I love events like this. The direct line to the folks using the tools under the pressure of competition is invaluable. Feedback we got last time led directly to product improvements that benefit the entire community.&#10;&#10;There are significant debugger improvements that will be available (in preview) this week. Neo C# tooling updates to support these debugger improvements will be available later this month - just in time for the start of the hackathon in April!&#10;&#10;https://t.co/ZOyqOQYiyJ&#10;&#10;If you're participating in Neo Polaris Launchpad, please don't hesitate to reach out to me with questions.&#10;&#10;The best way to reach me is via the official @Neo_Blockchain Discord (https://t.co/wkxYs9CCV9), though you can obviously also reach me here on Twitter as well.&#10;&#10;Good Luck!&#10;&#10;</description>
			<pubDate>Mon, 07 Mar 2022 15:28:08 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1500855828085043208</link>
			<guid>https://twitter.com/DevHawk/status/1500855828085043208</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>My son didn't know the term &quot;disc jockey&quot; ðŸ¤£ðŸ¤£ðŸ¤£ #ImOld&#10;&#10;</description>
			<pubDate>Sun, 06 Mar 2022 20:01:08 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1500562141853663239</link>
			<guid>https://twitter.com/DevHawk/status/1500562141853663239</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Would have liked to see a @SeattleKraken win, but the @Capitals need the standings points more.&#10;My eldest said tonight was like the opposite of watching say a Penguins /Flyers game. Those games, we're usually rooting for a meteor to hit the arena.&#10;&#10;</description>
			<pubDate>Sun, 06 Mar 2022 02:35:56 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1500299108178923522</link>
			<guid>https://twitter.com/DevHawk/status/1500299108178923522</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Love to see @Capitals saluting @SeattleKraken captain Mark Giordano in his 1000th game&#10;&#10;</description>
			<pubDate>Sun, 06 Mar 2022 00:28:25 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1500267016783073282</link>
			<guid>https://twitter.com/DevHawk/status/1500267016783073282</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>My wife and parents conspired to bring me back east to catch @SeattleKraken v. @Capitals.&#10;I've been a Caps fan since I was a kid. And of course I support the Kraken - my home team. So its awesome to get the chance to see these two teams face off. https://t.co/foLDc9WuM9&#10;&#10;I figured there would be of plenty of folks in Caps jerseys, so I wore my Kraken jersey. Way out numbered, but I've seen more Seattle jerseys than I was expecting&#10;&#10;</description>
			<pubDate>Sat, 05 Mar 2022 23:33:47 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1500253269993660417</link>
			<guid>https://twitter.com/DevHawk/status/1500253269993660417</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@ZackCz Can we have Al Franken back in office?&#10;&#10;</description>
			<pubDate>Fri, 04 Mar 2022 22:38:14 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1499876901187379206</link>
			<guid>https://twitter.com/DevHawk/status/1499876901187379206</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@roschler I'm on vacation, I'm not hiding under a rock without access to the internet&#10;&#10;</description>
			<pubDate>Fri, 04 Mar 2022 20:48:51 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1499849375404675080</link>
			<guid>https://twitter.com/DevHawk/status/1499849375404675080</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Hey, I think I know that guy https://t.co/X1VvJTee6g&#10;&#10;</description>
			<pubDate>Fri, 04 Mar 2022 18:20:23 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1499812013752659972</link>
			<guid>https://twitter.com/DevHawk/status/1499812013752659972</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Good luck in your future endeavors @migueldeicaza https://t.co/8ePWxS8XTq&#10;&#10;</description>
			<pubDate>Thu, 03 Mar 2022 04:22:57 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1499238878930079746</link>
			<guid>https://twitter.com/DevHawk/status/1499238878930079746</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>@clairernovotny Not really, though the primitives are there obviously.&#10;I'm looking for stuff like path comparison (case insensitive on windows vs case sensitive elsewhere) &amp;amp; processing paths that may come from another platform (processing a unix path via Path.Combine on Windows or vis-versa)&#10;&#10;@clairernovotny &quot;What is this 'Base Class Library' you speak of @clairernovotny?&quot; asked a guy who used to work on the Midori fork of the Base Class Library ðŸ¤£&#10;&#10;@clairernovotny I was hoping to find something like https://t.co/zNjFX5OymW but as a stand alone package&#10;&#10;</description>
			<pubDate>Tue, 01 Mar 2022 21:13:10 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1498768329053380609</link>
			<guid>https://twitter.com/DevHawk/status/1498768329053380609</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		<item>
			<description>Is there a xplat .NET library for working with file system paths that I'm not aware of?&#10;I could roll my own, but I'd rather use an existing (i.e. tested) library. I've done enough file system work to know there be dragons in the edge cases.&#10;&#10;</description>
			<pubDate>Tue, 01 Mar 2022 21:05:54 GMT</pubDate>
			<link>https://twitter.com/DevHawk/status/1498766501339287556</link>
			<guid>https://twitter.com/DevHawk/status/1498766501339287556</guid>
			<source:account service="twitter">DevHawk</source:account>
			</item>
		</channel>
	</rss>
