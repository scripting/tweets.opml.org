<?xml version="1.0" encoding="UTF-8"?>
<!-- RSS generated by opmltweets v1.5.0 on Tue, 02 Aug 2022 18:16:52 GMT -->
<rss version="2.0" xmlns:source="http://source.scripting.com/">
	<channel>
		<title>mathling tweets</title>
		<link>http://twitter.com/mathling</link>
		<description>A feed of recent tweets from mathling.</description>
		<pubDate>Tue, 02 Aug 2022 18:03:11 GMT</pubDate>
		<language>en-us</language>
		<generator>opmltweets v1.5.0</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<lastBuildDate>Tue, 02 Aug 2022 18:16:52 GMT</lastBuildDate>
		<cloud domain="rpc.rsscloud.io" port="5337" path="/pleaseNotify" registerProcedure="" protocol="http-post" />
		<source:account service="twitter">mathling</source:account>
		<source:localTime>Tue, August 2, 2022 2:16 PM EDT</source:localTime>
		<item>
			<description>&lt;p&gt;Updates on Active Markup-Related Specifications&#10;Patrick Durusau, David Maus, Steven Pemberton, Norm Tovey-Walsh, Robert Wheeler&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;PD: Update on Open Document Format&lt;/p&gt;&#10;&lt;p&gt;Plus wisdom on &amp;quot;referential backwards compatibility&amp;quot; [shudder]&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;DM: Update on Schematron&lt;/p&gt;&#10;&lt;p&gt;3rd edition ISO standard added XSLT 3/XPath 3 in 2020, but no longer freely available [thanks for nothing ISO] and no longer a working group there&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 18:03:11 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554528250734444545</link>
			<guid>https://twitter.com/mathling/status/1554528250734444545</guid>
			<source:markdown>Updates on Active Markup-Related Specifications&#10;Patrick Durusau, David Maus, Steven Pemberton, Norm Tovey-Walsh, Robert Wheeler&#10;#balisage2022&#10;&#10;&#10;PD: Update on Open Document Format&#10;&#10;Plus wisdom on &quot;referential backwards compatibility&quot; [shudder]&#10;&#10;#balisage2022&#10;&#10;DM: Update on Schematron&#10;&#10;3rd edition ISO standard added XSLT 3/XPath 3 in 2020, but no longer freely available [thanks for nothing ISO] and no longer a working group there&#10;&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Designing for Change: Pragmas as an Extensibility Mechanism for Invisible XML&#10;Tomos Hillman, C. M. Sperberg-McQueen, Bethan Tovey-Walsh, Norm Tovey-Walsh&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Two precepts&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;There are rules for a reason&lt;/li&gt;&#10;&lt;li&gt;Question authority&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Want a way to break the rules without imposing our mistakes on the world, a way to innovate but still maintain the standard&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Pragmas: give instructions to processor, generally out of scope of language semantics&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Our proposal for iXML pragmas is NOT official at this point&lt;/p&gt;&#10;&lt;p&gt;Pragmas will be ignored by pragma-unaware processors; will be understood by processor that understands that particular pragma&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Example&#10;Pragma is specially structured comment&#10;{[pragma]} vs {normal comment}&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Naming&#10;Special reserved pragma: {[+pragma myPragma &amp;quot;&lt;a href=&quot;https://t.co/C6tzMGlzma&amp;quot;%5D%7D&quot;&gt;https://t.co/C6tzMGlzma&amp;quot;]}&lt;/a&gt; sets the name to namespace association&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Various examples: renaming, make this a token, resolving ambiguity&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Experimental pragma that became part of the language: insertions&#10;One goal is to provide mechanism to experiment with things to see how they work&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Several implementors are working on this; mine implements several. Next step is to turn paper into spec&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Q: iXML spec has several extra-grammatical constraints&#10;Would these be good candidates for pragmatization?&#10;A: Yes, possibly, not sure of details&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Q: Fan of extensibility, but worried about interoperability. By definition not interoperable. Don&amp;#39;t see advantage of adding this to language.&#10;A: There are things that shouldn&amp;#39;t be part of language, e.g. ambiguity. Things making sense to particular processors...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;... Also, if there need to be ways to communicate things to processor, better to have one way than multiple ways.&#10;Believe there are those cases,there are limits to what iXML can express and may WANT different behaviours&#10;[[a debate that will continue; good points on both sides]]&lt;/p&gt;&#10;&lt;p&gt;MSM A: Why not bring use cases not pragma? Because most such proposals cannot be implemented. Having a proof-of-implementation short-circuits those debates.&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MSM continues: analogy with Private Use areas in Unicode&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JL: Another use, for annotating grammar for when you project it into a different kind of grammar. That&amp;#39;s what I&amp;#39;ve been using it for.&#10;A: I have notion of using annotation to add DC metadata to grammar&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 16:01:13 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554497557300056064</link>
			<guid>https://twitter.com/mathling/status/1554497557300056064</guid>
			<source:markdown>Designing for Change: Pragmas as an Extensibility Mechanism for Invisible XML&#10;Tomos Hillman, C. M. Sperberg-McQueen, Bethan Tovey-Walsh, Norm Tovey-Walsh&#10;#balisage2022&#10;&#10;&#10;BTW: Two precepts&#10;1. There are rules for a reason&#10;2. Question authority&#10;&#10;#balisage2022&#10;&#10;BTW: Want a way to break the rules without imposing our mistakes on the world, a way to innovate but still maintain the standard&#10;&#10;#balisage2022&#10;&#10;Pragmas: give instructions to processor, generally out of scope of language semantics&#10;&#10;#balisage2022&#10;&#10;BTW: Our proposal for iXML pragmas is NOT official at this point&#10;&#10;Pragmas will be ignored by pragma-unaware processors; will be understood by processor that understands that particular pragma&#10;&#10;#balisage2022&#10;&#10;NTW: Example&#10;Pragma is specially structured comment&#10;{[pragma]} vs {normal comment}&#10;&#10;#balisage2022&#10;&#10;NTW: Naming&#10;Special reserved pragma: {[+pragma myPragma &quot;https://t.co/C6tzMGlzma&quot;]} sets the name to namespace association&#10;&#10;#balisage2022&#10;&#10;NTW: Various examples: renaming, make this a token, resolving ambiguity&#10;&#10;#balisage2022&#10;&#10;NTW: Experimental pragma that became part of the language: insertions&#10;One goal is to provide mechanism to experiment with things to see how they work&#10;#balisage2022&#10;&#10;NTW: Several implementors are working on this; mine implements several. Next step is to turn paper into spec&#10;#balisage2022&#10;&#10;Q: iXML spec has several extra-grammatical constraints&#10;Would these be good candidates for pragmatization?&#10;A: Yes, possibly, not sure of details&#10;#balisage2022&#10;&#10;Q: Fan of extensibility, but worried about interoperability. By definition not interoperable. Don't see advantage of adding this to language.&#10;A: There are things that shouldn't be part of language, e.g. ambiguity. Things making sense to particular processors...&#10;#balisage2022&#10;&#10;... Also, if there need to be ways to communicate things to processor, better to have one way than multiple ways.&#10;Believe there are those cases,there are limits to what iXML can express and may WANT different behaviours&#10;[[a debate that will continue; good points on both sides]]&#10;&#10;MSM A: Why not bring use cases not pragma? Because most such proposals cannot be implemented. Having a proof-of-implementation short-circuits those debates.&#10;&#10;#balisage2022&#10;&#10;MSM continues: analogy with Private Use areas in Unicode&#10;&#10;#balisage2022&#10;&#10;JL: Another use, for annotating grammar for when you project it into a different kind of grammar. That's what I've been using it for.&#10;A: I have notion of using annotation to add DC metadata to grammar&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;BITS for Government Information?&#10;Ravit H. David&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Scholars Portal E-books Service&#10;Recent redesign: what metadata standard to use?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Load information from various publishers, various formats, various XML vocabularies, various metadata&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: BITS=book interchange tags format (cousin to JATS)&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: BITS is focused on scientific/technical books&#10;Government information is a bit of a stretch&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: For government information in mixed archive, need book type info plus second level information of subtype&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Gov vs corporate author: richer information about source author/orgnanization/ministry/department&#10;publisher=&amp;quot;Queen&amp;#39;s Printer&amp;quot; is not very informative&#10;various contributors and collaborators in play &amp;quot;in cooperation with&amp;quot;, &amp;quot;prepared by&amp;quot;, etc.&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: More complexity: different metadata associated with different parts of the digitization process and wrt the print version of the report&#10;Important to be able to record this&#10;Also want to know creator/provenance of metadata too&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 15:03:32 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554483040490962944</link>
			<guid>https://twitter.com/mathling/status/1554483040490962944</guid>
			<source:markdown>BITS for Government Information?&#10;Ravit H. David&#10;#balisage2022&#10;&#10;&#10;RD: Scholars Portal E-books Service&#10;Recent redesign: what metadata standard to use?&#10;#balisage2022&#10;&#10;RD: Load information from various publishers, various formats, various XML vocabularies, various metadata&#10;&#10;#balisage2022&#10;&#10;RD: BITS=book interchange tags format (cousin to JATS)&#10;&#10;#balisage2022&#10;&#10;RD: BITS is focused on scientific/technical books&#10;Government information is a bit of a stretch&#10;&#10;#balisage2022&#10;&#10;RD: For government information in mixed archive, need book type info plus second level information of subtype&#10;&#10;#balisage2022&#10;&#10;RD: Gov vs corporate author: richer information about source author/orgnanization/ministry/department&#10;publisher=&quot;Queen's Printer&quot; is not very informative&#10;various contributors and collaborators in play &quot;in cooperation with&quot;, &quot;prepared by&quot;, etc.&#10;&#10;#balisage2022&#10;&#10;RD: More complexity: different metadata associated with different parts of the digitization process and wrt the print version of the report&#10;Important to be able to record this&#10;Also want to know creator/provenance of metadata too&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@mdubinko King of Whova, we salute you&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 14:30:50 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554474812630011905</link>
			<guid>https://twitter.com/mathling/status/1554474812630011905</guid>
			<source:markdown>@mdubinko King of Whova, we salute you&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Getting Useful XML out of Microsoft Excel&#10;Gayanthika Udeshani&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;XProc: XSLX =&amp;gt; XSLT =&amp;gt; CALS, SVG &lt;/p&gt;&#10;&lt;p&gt;(Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Input parameters to identify sheet name and cell range&#10;Use XSLT 3.0 xsl:iterate to calculate total width&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Complications&#10;Formatting, hidden cells, orientation, conditional formatting, date/time formatting,...&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Lots of indirection: cell references font id 1, which is elsewhere in structure&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Charts to SVG&#10;e.g. line chart, use svg:path, etc.&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 14:02:38 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554467714311536642</link>
			<guid>https://twitter.com/mathling/status/1554467714311536642</guid>
			<source:markdown>Getting Useful XML out of Microsoft Excel&#10;Gayanthika Udeshani&#10;&#10;#balisage2022&#10;&#10;&#10;XProc: XSLX =&amp;gt; XSLT =&amp;gt; CALS, SVG&#10;&#10;(Demo)&#10;#balisage2022&#10;&#10;Input parameters to identify sheet name and cell range&#10;Use XSLT 3.0 xsl:iterate to calculate total width&#10;&#10;#balisage2022&#10;&#10;GU: Complications&#10;Formatting, hidden cells, orientation, conditional formatting, date/time formatting,...&#10;&#10;#balisage2022&#10;&#10;GU: Lots of indirection: cell references font id 1, which is elsewhere in structure&#10;#balisage2022&#10;&#10;GU: Charts to SVG&#10;e.g. line chart, use svg:path, etc.&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Bloody hell why can&amp;#39;t things just work&#10;Just spent last 20 minutes getting my sound working again&#10;It broke after I touched precisely NOTHING&lt;/p&gt;&#10;&lt;p&gt;Grrrrrr&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 19:12:35 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554183328349048832</link>
			<guid>https://twitter.com/mathling/status/1554183328349048832</guid>
			<source:markdown>Bloody hell why can't things just work&#10;Just spent last 20 minutes getting my sound working again&#10;It broke after I touched precisely NOTHING&#10;&#10;Grrrrrr&#10;#balisage2022&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;JATS Superhighway: Onramp to a Backward-incompatible Version&#10;Jeff Beck&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 19:02:23 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554180762672381952</link>
			<guid>https://twitter.com/mathling/status/1554180762672381952</guid>
			<source:markdown>JATS Superhighway: Onramp to a Backward-incompatible Version&#10;Jeff Beck&#10;&#10;#balisage2022&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Serverless Searching with XSLT and JavaScript&#10;Joey Takeda, Martin Holmes&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: The Endings project: collaboration to figure out how to ensure long-term survival of projects&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Most sustainable, archivable: static websites (HTML, CSS, JavaScript, minimal dependencies)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Problem: How to add search to static websites?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Client side libraries? Have to be in memory; doesn&amp;#39;t scale to large websites. Google? elasticsearch? Other issues. Decided to build our own: staticSearch, client side website search&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: staticSearch XSLT/Ant process to generated inverted index of JSON files&lt;/p&gt;&#10;&lt;p&gt;Has stemming in multiple languages, wildcards, exact phrases, boolean, configurable filters, contextual...&lt;/p&gt;&#10;&lt;p&gt;Every search is bookmarkable URL&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT:&#10;Input: collection of WF HTML5 in XHTML namespace&#10;Plus: configuration file&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: rules tell you what to exclude (default is index everything), contexts to give labels (use match patterns)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Stemming using own implementation of Porter2 plus &amp;quot;diacritic&amp;quot; stemmer and &amp;quot;identity&amp;quot; stemmer, can also use your own (XSLT + JavaScript); in config&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Create &amp;quot;inverted index&amp;quot; JSON files, per stem gets instances; fetched one by one by JavaScript in search&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Create other additional information during indexing: list of titles, list of all (unstemmed) words (used for wildcarding via regex)&#10;#ballisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Filters and controls generated during indexing; can be used to build the search page&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Considerations&#10;Limiting factor is titles (e.g. 170K pages project =&amp;gt; 15MB titles file)&#10;No easy way to show matches in document&#10;Context-specific searches, no conditional logic for filters&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Solution for context-specific search is separate search pages over different parts (plus more generic for whole site)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JT: Lots of stem files feels wrong, but seems to work OK&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 17:58:39 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554164722668187653</link>
			<guid>https://twitter.com/mathling/status/1554164722668187653</guid>
			<source:markdown>Serverless Searching with XSLT and JavaScript&#10;Joey Takeda, Martin Holmes&#10;#balisage2022&#10;&#10;&#10;JT: The Endings project: collaboration to figure out how to ensure long-term survival of projects&#10;#balisage2022&#10;&#10;JT: Most sustainable, archivable: static websites (HTML, CSS, JavaScript, minimal dependencies)&#10;#balisage2022&#10;&#10;JT: Problem: How to add search to static websites?&#10;#balisage2022&#10;&#10;JT: Client side libraries? Have to be in memory; doesn't scale to large websites. Google? elasticsearch? Other issues. Decided to build our own: staticSearch, client side website search&#10;#balisage2022&#10;&#10;JT: staticSearch XSLT/Ant process to generated inverted index of JSON files&#10;&#10;Has stemming in multiple languages, wildcards, exact phrases, boolean, configurable filters, contextual...&#10;&#10;Every search is bookmarkable URL&#10;&#10;#balisage2022&#10;&#10;JT:&#10;Input: collection of WF HTML5 in XHTML namespace&#10;Plus: configuration file&#10;#balisage2022&#10;&#10;JT: rules tell you what to exclude (default is index everything), contexts to give labels (use match patterns)&#10;#balisage2022&#10;&#10;JT: Stemming using own implementation of Porter2 plus &quot;diacritic&quot; stemmer and &quot;identity&quot; stemmer, can also use your own (XSLT + JavaScript); in config&#10;#balisage2022&#10;&#10;JT: Create &quot;inverted index&quot; JSON files, per stem gets instances; fetched one by one by JavaScript in search&#10;#balisage2022&#10;&#10;JT: Create other additional information during indexing: list of titles, list of all (unstemmed) words (used for wildcarding via regex)&#10;#ballisage2022&#10;&#10;JT: Filters and controls generated during indexing; can be used to build the search page&#10;#balisage2022&#10;&#10;JT: Considerations&#10;Limiting factor is titles (e.g. 170K pages project =&amp;gt; 15MB titles file)&#10;No easy way to show matches in document&#10;Context-specific searches, no conditional logic for filters&#10;#balisage2022&#10;&#10;JT: Solution for context-specific search is separate search pages over different parts (plus more generic for whole site)&#10;#balisage2022&#10;&#10;JT: Lots of stem files feels wrong, but seems to work OK&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;New release of my #XQuery libraries, special for  #balisage2022&lt;/p&gt;&#10;&lt;p&gt;New: implementation of Wave Function Collapse tiling algorithm; various improvements/bug fixes/examples for geometric code&lt;/p&gt;&#10;&lt;p&gt;&lt;a href=&quot;https://t.co/SDwwbxgp8q&quot;&gt;https://t.co/SDwwbxgp8q&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 17:34:00 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554158517761691649</link>
			<guid>https://twitter.com/mathling/status/1554158517761691649</guid>
			<source:markdown>New release of my #XQuery libraries, special for  #balisage2022&#10;&#10;New: implementation of Wave Function Collapse tiling algorithm; various improvements/bug fixes/examples for geometric code&#10;&#10;https://t.co/SDwwbxgp8q&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Invisible XML Coming into Focus&#10;Tomos Hillman; John Lumley; Steven Pemberton; C. M. Sperberg-McQueen; Bethan Tovey-Walsh; Norm Tovey-Walsh&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: iXML 1.0&#10;What&amp;#39;s it for?&#10;&amp;quot;What if you could see everything as XML?&amp;quot;&#10;Recognizing abstractions: these things are &amp;quot;the same&amp;quot;&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: But also need to understand abstractions in context, which changes their interpretation&#10;Abstractions in context = seeing things as XML&#10;Make this visible to the computer&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: How does iXML work?&#10;iXML grammar =&amp;gt; parse input stream =&amp;gt; XML&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: What&amp;#39;s new?&#10;Spec: iXML 1.0&#10;Community group&#10;Processor behaviour defined&#10;Infrastructure: tests, sample grammars, implementations&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MSM: Speaking of Aparecium implementation&#10;Implemented in XQuery&#10;Trying to make loading non-XML resources as easy as loading them as text or XML as XML&#10;(Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MSM: Biggest issue right now: too slow for production use&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;SB: ixampl implementation&#10;Originally built as test bed for language concepts; designed to be flexible rather than fast&#10;Has a bootstrap parser&#10;Web app or command line, written in ABC&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JL: jwiXML implementation&#10;JavaScript library + SaxonJS/XSLT API to run in browser&#10;Browser-based interactive workbench&#10;(Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JL: Demo of XPath grammar minimization to get nice tree without all kinds of deep extraneous junk&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Love it!&lt;/p&gt;&#10;&lt;p&gt;NTW: NineML implementation&#10;Java based implementation&#10;Can also produce JSON&#10;(Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Or CSV&#10;Or SVG diagram of parse&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Recently added GLL parser which is sometimes slower than Earley parser and sometimes much much faster&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;SB: What&amp;#39;s next?&#10;Extend infrastructure&#10;Encourage new iXML projects&#10;Engage with iXML users&#10;Evolve next iXML version: look for use cases and figure how to integrate that in language&lt;/p&gt;&#10;&lt;p&gt;Welcome to join group, sign up at W3C&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 15:51:25 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554132704647471104</link>
			<guid>https://twitter.com/mathling/status/1554132704647471104</guid>
			<source:markdown>Invisible XML Coming into Focus&#10;Tomos Hillman; John Lumley; Steven Pemberton; C. M. Sperberg-McQueen; Bethan Tovey-Walsh; Norm Tovey-Walsh&#10;#balisage2022&#10;&#10;&#10;BTW: iXML 1.0&#10;What's it for?&#10;&quot;What if you could see everything as XML?&quot;&#10;Recognizing abstractions: these things are &quot;the same&quot;&#10;#balisage2022&#10;&#10;BTW: But also need to understand abstractions in context, which changes their interpretation&#10;Abstractions in context = seeing things as XML&#10;Make this visible to the computer&#10;#balisage2022&#10;&#10;BTW: How does iXML work?&#10;iXML grammar =&amp;gt; parse input stream =&amp;gt; XML&#10;#balisage2022&#10;&#10;BTW: What's new?&#10;Spec: iXML 1.0&#10;Community group&#10;Processor behaviour defined&#10;Infrastructure: tests, sample grammars, implementations&#10;#balisage2022&#10;&#10;MSM: Speaking of Aparecium implementation&#10;Implemented in XQuery&#10;Trying to make loading non-XML resources as easy as loading them as text or XML as XML&#10;(Demo)&#10;#balisage2022&#10;&#10;MSM: Biggest issue right now: too slow for production use&#10;#balisage2022&#10;&#10;SB: ixampl implementation&#10;Originally built as test bed for language concepts; designed to be flexible rather than fast&#10;Has a bootstrap parser&#10;Web app or command line, written in ABC&#10;#balisage2022&#10;&#10;JL: jwiXML implementation&#10;JavaScript library + SaxonJS/XSLT API to run in browser&#10;Browser-based interactive workbench&#10;(Demo)&#10;#balisage2022&#10;&#10;JL: Demo of XPath grammar minimization to get nice tree without all kinds of deep extraneous junk&#10;#balisage2022&#10;&#10;Love it!&#10;&#10;NTW: NineML implementation&#10;Java based implementation&#10;Can also produce JSON&#10;(Demo)&#10;#balisage2022&#10;&#10;NTW: Or CSV&#10;Or SVG diagram of parse&#10;#balisage2022&#10;&#10;NTW: Recently added GLL parser which is sometimes slower than Earley parser and sometimes much much faster&#10;#balisage2022&#10;&#10;SB: What's next?&#10;Extend infrastructure&#10;Encourage new iXML projects&#10;Engage with iXML users&#10;Evolve next iXML version: look for use cases and figure how to integrate that in language&#10;&#10;Welcome to join group, sign up at W3C&#10;&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Correcting Collation Problems with XSLT&#10;Elisa E. Beshero-Bondar&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Machine-assisted collation; here the various publications of Mary Shelley&amp;#39;s Frankenstein&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Gothenburg model of computer-aided collation&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;Tokenization (Smallest unit of comparison)&lt;/li&gt;&#10;&lt;li&gt;Normalization (e.g. &amp;amp; = and)&lt;/li&gt;&#10;&lt;li&gt;Alignment (chunking, identifiable start/end pts)]&lt;/li&gt;&#10;&lt;li&gt;Analysis&lt;/li&gt;&#10;&lt;li&gt;Visualization&#10;Iterate&#10;#balisage2022&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;EBB: Metaphor: collation as weaving&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Tokenization; we need to be able to intervene in tokenization and normalization as part of our scholarship&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: When to make interventions? Pre- vs Post-?&#10;Pre-processing better, but can go overboard and make new problems&#10;Post-processing with XSLT? Yes, with care&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Tokenization and alignment is a research method&#10;More than one way to do it&#10;So scholars/programmers: share your algorithms&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Error correction is cyclical and hard&#10;Need to document errors and interventions&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EBB: Machine-assisted processes need a lot of documentation&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Excuse for shout-out to my talk later in the week (Metadata for Creators), which is all about instrumentation of processes subject to a lot of cyclical tweakage&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Really really like this metaphor and how she applied it&#10;Wish I could have better captured it from the EBB firehose of information&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 14:49:46 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554117186804801537</link>
			<guid>https://twitter.com/mathling/status/1554117186804801537</guid>
			<source:markdown>Correcting Collation Problems with XSLT&#10;Elisa E. Beshero-Bondar&#10;&#10;#balisage2022&#10;&#10;&#10;EBB: Machine-assisted collation; here the various publications of Mary Shelley's Frankenstein&#10;#balisage2022&#10;&#10;EBB: Gothenburg model of computer-aided collation&#10;1. Tokenization (Smallest unit of comparison)&#10;2. Normalization (e.g. &amp;amp; = and)&#10;3. Alignment (chunking, identifiable start/end pts)]&#10;4. Analysis&#10;5. Visualization&#10;Iterate&#10;#balisage2022&#10;&#10;EBB: Metaphor: collation as weaving&#10;#balisage2022&#10;&#10;EBB: Tokenization; we need to be able to intervene in tokenization and normalization as part of our scholarship&#10;#balisage2022&#10;&#10;EBB: When to make interventions? Pre- vs Post-?&#10;Pre-processing better, but can go overboard and make new problems&#10;Post-processing with XSLT? Yes, with care&#10;#balisage2022&#10;&#10;EBB: Tokenization and alignment is a research method&#10;More than one way to do it&#10;So scholars/programmers: share your algorithms&#10;#balisage2022&#10;&#10;EBB: Error correction is cyclical and hard&#10;Need to document errors and interventions&#10;#balisage2022&#10;&#10;EBB: Machine-assisted processes need a lot of documentation&#10;#balisage2022&#10;&#10;Excuse for shout-out to my talk later in the week (Metadata for Creators), which is all about instrumentation of processes subject to a lot of cyclical tweakage&#10;#balisage2022&#10;&#10;Really really like this metaphor and how she applied it&#10;Wish I could have better captured it from the EBB firehose of information&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;It begins!&lt;/p&gt;&#10;&lt;p&gt;Tommie Usdin &amp;quot;Destructive Consistency&amp;quot; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;&amp;quot;Balisage is not television&amp;quot; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;Usdin: &amp;quot;We will see slides with pointy brackets on them: they won&amp;#39;t poke us and we won&amp;#39;t bleed&amp;quot; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;Usdin: The world is not consisent, and we need to make markup conform to the world as it is...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Usdin: I believe in general consistency is desirable, except when it would be surprising.&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 14:04:32 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554105805355380736</link>
			<guid>https://twitter.com/mathling/status/1554105805355380736</guid>
			<source:markdown>It begins!&#10;&#10;Tommie Usdin &quot;Destructive Consistency&quot; #balisage2022&#10;&#10;&#10;&quot;Balisage is not television&quot; #balisage2022&#10;&#10;Usdin: &quot;We will see slides with pointy brackets on them: they won't poke us and we won't bleed&quot; #balisage2022&#10;&#10;Usdin: The world is not consisent, and we need to make markup conform to the world as it is...&#10;#balisage2022&#10;&#10;Usdin: I believe in general consistency is desirable, except when it would be surprising.&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Minutes away from the start of  #balisage2022 !&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 13:58:51 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554104374388854784</link>
			<guid>https://twitter.com/mathling/status/1554104374388854784</guid>
			<source:markdown>Minutes away from the start of  #balisage2022 !&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		</channel>
	</rss>
