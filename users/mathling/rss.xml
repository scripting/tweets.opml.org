<?xml version="1.0" encoding="UTF-8"?>
<!-- RSS generated by opmltweets v1.5.0 on Sun, 21 Aug 2022 14:47:27 GMT -->
<rss version="2.0" xmlns:source="http://source.scripting.com/">
	<channel>
		<title>mathling tweets</title>
		<link>http://twitter.com/mathling</link>
		<description>A feed of recent tweets from mathling.</description>
		<pubDate>Sun, 21 Aug 2022 14:43:44 GMT</pubDate>
		<language>en-us</language>
		<generator>opmltweets v1.5.0</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<lastBuildDate>Sun, 21 Aug 2022 14:47:27 GMT</lastBuildDate>
		<cloud domain="rpc.rsscloud.io" port="5337" path="/pleaseNotify" registerProcedure="" protocol="http-post" />
		<source:account service="twitter">mathling</source:account>
		<source:localTime>Sun, August 21, 2022 10:47 AM EDT</source:localTime>
		<item>
			<description>&lt;p&gt;@line_o @barefootliam I think it all depends on what you&amp;#39;re using the random number generator for&#10;Making randomized art or fuzz testing isn&amp;#39;t the same as trying to create realistic simulations of physical processes&lt;/p&gt;&#10;</description>
			<pubDate>Sun, 21 Aug 2022 14:43:44 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1561363425413910530</link>
			<guid>https://twitter.com/mathling/status/1561363425413910530</guid>
			<source:markdown>@line_o @barefootliam I think it all depends on what you're using the random number generator for&#10;Making randomized art or fuzz testing isn't the same as trying to create realistic simulations of physical processes&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@barefootliam Absolutely&#10;Just a reminder to pick the right tool for the job&#10;It&amp;#39;s easy to get a little complacent&lt;/p&gt;&#10;</description>
			<pubDate>Sun, 21 Aug 2022 02:58:35 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1561185972506677251</link>
			<guid>https://twitter.com/mathling/status/1561185972506677251</guid>
			<source:markdown>@barefootliam Absolutely&#10;Just a reminder to pick the right tool for the job&#10;It's easy to get a little complacent&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Pseudo random number generators, not as good as you might hope &lt;a href=&quot;https://t.co/ID8RyEqse1&quot;&gt;https://t.co/ID8RyEqse1&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Sat, 20 Aug 2022 04:40:08 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1560849137276317696</link>
			<guid>https://twitter.com/mathling/status/1560849137276317696</guid>
			<source:markdown>Pseudo random number generators, not as good as you might hope https://t.co/ID8RyEqse1&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;More blobs&lt;/p&gt;&#10;&lt;p&gt;Now with speckles and tangents&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/ktg1whRCyB&quot;&gt;https://t.co/ktg1whRCyB&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Bubbles in the mysterious deep &lt;a href=&quot;https://t.co/QPlOdnZPiF&quot;&gt;https://t.co/QPlOdnZPiF&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Last one &lt;a href=&quot;https://t.co/NHjLjpfp3s&quot;&gt;https://t.co/NHjLjpfp3s&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 19 Aug 2022 18:58:28 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1560702757232726019</link>
			<guid>https://twitter.com/mathling/status/1560702757232726019</guid>
			<source:markdown>More blobs&#10;&#10;Now with speckles and tangents&#10;&#10;#XQuery #SVG https://t.co/ktg1whRCyB&#10;&#10;&#10;Bubbles in the mysterious deep https://t.co/QPlOdnZPiF&#10;&#10;Last one https://t.co/NHjLjpfp3s&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Patterns of music&lt;/p&gt;&#10;&lt;p&gt; Beethoven Große Fuge in B flat major Opus 133&lt;/p&gt;&#10;&lt;p&gt;Dig that dramatic pause in the lower registers&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/6MUNpyUveA&quot;&gt;https://t.co/6MUNpyUveA&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Take a MusicXML score.&lt;/p&gt;&#10;&lt;p&gt;Map parts to colour gradients (specific notes to hues within that gradient), pitch to height from baseline, duration as line length. &lt;/p&gt;&#10;&lt;p&gt;Then wrap the whole thing along a curve.&lt;/p&gt;&#10;&lt;p&gt;Johannes Brahms String Quarter in C minor, Op. 51 no. 1 (second movement) &lt;a href=&quot;https://t.co/jUc8UOXuSF&quot;&gt;https://t.co/jUc8UOXuSF&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Mapping to smooth edges along curls that increase and decrease in size.&lt;/p&gt;&#10;&lt;p&gt;Johann Sebastian Bach Brandenburg Concerto No 2. in F Major (second movement) &lt;a href=&quot;https://t.co/0kYdewFCcc&quot;&gt;https://t.co/0kYdewFCcc&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;I like the idea of music as a pattern sequence generator, I&amp;#39;ll probably experiment with using it that was rather than this rather direct rendering&lt;/p&gt;&#10;&lt;p&gt;Shout out to Project Gutenberg, where I sourced the MusicXML&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 18 Aug 2022 20:30:31 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1560363536613724161</link>
			<guid>https://twitter.com/mathling/status/1560363536613724161</guid>
			<source:markdown>Patterns of music&#10;&#10;Beethoven Große Fuge in B flat major Opus 133&#10;&#10;Dig that dramatic pause in the lower registers&#10;&#10;#XQuery #SVG https://t.co/6MUNpyUveA&#10;&#10;&#10;Take a MusicXML score.&#10;&#10;Map parts to colour gradients (specific notes to hues within that gradient), pitch to height from baseline, duration as line length.&#10;&#10;Then wrap the whole thing along a curve.&#10;&#10;Johannes Brahms String Quarter in C minor, Op. 51 no. 1 (second movement) https://t.co/jUc8UOXuSF&#10;&#10;Mapping to smooth edges along curls that increase and decrease in size.&#10;&#10;Johann Sebastian Bach Brandenburg Concerto No 2. in F Major (second movement) https://t.co/0kYdewFCcc&#10;&#10;I like the idea of music as a pattern sequence generator, I'll probably experiment with using it that was rather than this rather direct rendering&#10;&#10;Shout out to Project Gutenberg, where I sourced the MusicXML&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Serendipity&lt;/p&gt;&#10;&lt;p&gt;Early on in the development of the blobs (previous thread), things were wonky, but the debugging marks looked kinda cool, so circling back to run with that,&#10;adding a little texture, etc.&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/xMI4OR2ket&quot;&gt;https://t.co/xMI4OR2ket&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Art: where bugs are opportunities &lt;a href=&quot;https://t.co/tEhfpLrTQ9&quot;&gt;https://t.co/tEhfpLrTQ9&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 16 Aug 2022 18:24:10 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1559606960147685376</link>
			<guid>https://twitter.com/mathling/status/1559606960147685376</guid>
			<source:markdown>Serendipity&#10;&#10;Early on in the development of the blobs (previous thread), things were wonky, but the debugging marks looked kinda cool, so circling back to run with that,&#10;adding a little texture, etc.&#10;&#10;#XQuery #SVG https://t.co/xMI4OR2ket&#10;&#10;&#10;Art: where bugs are opportunities https://t.co/tEhfpLrTQ9&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@DanaSchwartzzz @jackiantonovich Correct&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 16 Aug 2022 03:13:53 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1559377883105177603</link>
			<guid>https://twitter.com/mathling/status/1559377883105177603</guid>
			<source:markdown>@DanaSchwartzzz @jackiantonovich Correct&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Blobs&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/fjMy1doX3S&quot;&gt;https://t.co/fjMy1doX3S&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;The dragonfly&lt;/p&gt;&#10;&lt;p&gt;The number and closeness of the echoing layers is randomized &lt;a href=&quot;https://t.co/ftSnWDiuYb&quot;&gt;https://t.co/ftSnWDiuYb&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Santorini&lt;/p&gt;&#10;&lt;p&gt;Using a randomized colour scheme instead of a sequential one &lt;a href=&quot;https://t.co/EYXycMT2uV&quot;&gt;https://t.co/EYXycMT2uV&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;The butterfly&lt;/p&gt;&#10;&lt;p&gt;The basic process here is to take an arrangement of points, and smoothly connect circular arcs between near neighbours. Hilarity ensues. &lt;a href=&quot;https://t.co/3lCtRwvmC4&quot;&gt;https://t.co/3lCtRwvmC4&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Like Rorschach blots, you see what you see, I suppose.&lt;/p&gt;&#10;&lt;p&gt;Leafy sea dragon? Illuminated capital? New hill-top subdivision? &lt;a href=&quot;https://t.co/LpOWAKS88Z&quot;&gt;https://t.co/LpOWAKS88Z&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 15 Aug 2022 23:47:06 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1559325843523964930</link>
			<guid>https://twitter.com/mathling/status/1559325843523964930</guid>
			<source:markdown>Blobs&#10;&#10;#XQuery #SVG https://t.co/fjMy1doX3S&#10;&#10;&#10;The dragonfly&#10;&#10;The number and closeness of the echoing layers is randomized https://t.co/ftSnWDiuYb&#10;&#10;Santorini&#10;&#10;Using a randomized colour scheme instead of a sequential one https://t.co/EYXycMT2uV&#10;&#10;The butterfly&#10;&#10;The basic process here is to take an arrangement of points, and smoothly connect circular arcs between near neighbours. Hilarity ensues. https://t.co/3lCtRwvmC4&#10;&#10;Like Rorschach blots, you see what you see, I suppose.&#10;&#10;Leafy sea dragon? Illuminated capital? New hill-top subdivision? https://t.co/LpOWAKS88Z&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@msokolov @barefootliam @kurt_cagle Stemming Arabic, where there are No Good Answers&lt;/p&gt;&#10;&lt;p&gt;Precision? You want precision? Hah hah hah hah hah&lt;/p&gt;&#10;&lt;p&gt;Oh, recall? GTFO&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 12 Aug 2022 17:31:27 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1558144145419407361</link>
			<guid>https://twitter.com/mathling/status/1558144145419407361</guid>
			<source:markdown>@msokolov @barefootliam @kurt_cagle Stemming Arabic, where there are No Good Answers&#10;&#10;Precision? You want precision? Hah hah hah hah hah&#10;&#10;Oh, recall? GTFO&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@barefootliam @kurt_cagle Punctuational exceptions and compound weirdness&lt;/p&gt;&#10;&lt;p&gt;don&amp;#39;t  aujourd&amp;#39;hui d&amp;#39;accord entr&amp;#39;acte &lt;/p&gt;&#10;&lt;p&gt;These bastards&lt;/p&gt;&#10;&lt;p&gt;running runnings&lt;/p&gt;&#10;&lt;p&gt;Also: all designers of stem algorithms ARE mad as hatters BWA HAH HAH&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 12 Aug 2022 16:28:02 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1558128186184982528</link>
			<guid>https://twitter.com/mathling/status/1558128186184982528</guid>
			<source:markdown>@barefootliam @kurt_cagle Punctuational exceptions and compound weirdness&#10;&#10;don't  aujourd'hui d'accord entr'acte&#10;&#10;These bastards&#10;&#10;running runnings&#10;&#10;Also: all designers of stem algorithms ARE mad as hatters BWA HAH HAH&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;A river runs through it&lt;/p&gt;&#10;&lt;p&gt;Showing the height field: Each triangular face is shaded with a diffuse lighting model based on dot products of the face normal &amp;amp; the direction of illumination (where is the sun? exercise for viewer)&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/FxhycogByH&quot;&gt;https://t.co/FxhycogByH&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;The Cordillera&lt;/p&gt;&#10;&lt;p&gt;When we don&amp;#39;t do a lot of pruning of side branches... &lt;a href=&quot;https://t.co/dNVrEvgD4i&quot;&gt;https://t.co/dNVrEvgD4i&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;We can use a more boring height field. Previous ones use ridged fractal noise; here we use a single staight ridge line. Not so naturalistic, but interesting in its own way. &lt;a href=&quot;https://t.co/ZNj9R10efJ&quot;&gt;https://t.co/ZNj9R10efJ&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Rivers made by joining points in a hex grid, computing splines off joined channels for smoothing, w/ some pruning. To avoid straight lines, the actual point locations in the grid are jostled a bit. But... we can jostle them more, applying point-to-point function&lt;/p&gt;&#10;&lt;p&gt;A little warped &lt;a href=&quot;https://t.co/HPBCxjBvsj&quot;&gt;https://t.co/HPBCxjBvsj&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Lava cracks in the asteroid as it crashes into the atmosphere &lt;a href=&quot;https://t.co/j62E1fIlW4&quot;&gt;https://t.co/j62E1fIlW4&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Mess with things enough, and it looks like alien cave art &lt;a href=&quot;https://t.co/iBirIRsw4O&quot;&gt;https://t.co/iBirIRsw4O&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 12 Aug 2022 16:18:42 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1558125834338152449</link>
			<guid>https://twitter.com/mathling/status/1558125834338152449</guid>
			<source:markdown>A river runs through it&#10;&#10;Showing the height field: Each triangular face is shaded with a diffuse lighting model based on dot products of the face normal &amp;amp; the direction of illumination (where is the sun? exercise for viewer)&#10;&#10;#XQuery #SVG https://t.co/FxhycogByH&#10;&#10;&#10;The Cordillera&#10;&#10;When we don't do a lot of pruning of side branches... https://t.co/dNVrEvgD4i&#10;&#10;We can use a more boring height field. Previous ones use ridged fractal noise; here we use a single staight ridge line. Not so naturalistic, but interesting in its own way. https://t.co/ZNj9R10efJ&#10;&#10;Rivers made by joining points in a hex grid, computing splines off joined channels for smoothing, w/ some pruning. To avoid straight lines, the actual point locations in the grid are jostled a bit. But... we can jostle them more, applying point-to-point function&#10;&#10;A little warped https://t.co/HPBCxjBvsj&#10;&#10;Lava cracks in the asteroid as it crashes into the atmosphere https://t.co/j62E1fIlW4&#10;&#10;Mess with things enough, and it looks like alien cave art https://t.co/iBirIRsw4O&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@iamscicomm Practice the $!*? out of my talk. By the time I do it for real, I&amp;#39;ve practiced it scores of times. &lt;/p&gt;&#10;&lt;p&gt;Also: put a &amp;quot;Stop. Breathe.&amp;quot; in my notes pages.&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 11 Aug 2022 17:00:02 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1557773848589742081</link>
			<guid>https://twitter.com/mathling/status/1557773848589742081</guid>
			<source:markdown>@iamscicomm Practice the $!*? out of my talk. By the time I do it for real, I've practiced it scores of times.&#10;&#10;Also: put a &quot;Stop. Breathe.&quot; in my notes pages.&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Yikes &lt;a href=&quot;https://t.co/vkmhxBackK&quot;&gt;https://t.co/vkmhxBackK&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 11 Aug 2022 02:40:53 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1557557637952131072</link>
			<guid>https://twitter.com/mathling/status/1557557637952131072</guid>
			<source:markdown>Yikes https://t.co/vkmhxBackK&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;No lie detected &lt;a href=&quot;https://t.co/ZuWkW19QlP&quot;&gt;https://t.co/ZuWkW19QlP&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 10 Aug 2022 19:07:49 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1557443618440245253</link>
			<guid>https://twitter.com/mathling/status/1557443618440245253</guid>
			<source:markdown>No lie detected https://t.co/ZuWkW19QlP&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;More experimenting&#10;Now with curves, a little jitter, and a ridged fractal noise &amp;quot;height&amp;quot; field, plus pruning&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/DS9PUXN4w5&quot;&gt;https://t.co/DS9PUXN4w5&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 10 Aug 2022 16:42:22 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1557407016817045505</link>
			<guid>https://twitter.com/mathling/status/1557407016817045505</guid>
			<source:markdown>More experimenting&#10;Now with curves, a little jitter, and a ridged fractal noise &quot;height&quot; field, plus pruning&#10;&#10;#XQuery #SVG https://t.co/DS9PUXN4w5&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Experimenting (spot the debugging marks)&lt;/p&gt;&#10;&lt;p&gt;#XQuery #SVG &lt;a href=&quot;https://t.co/mcoDcM1xpU&quot;&gt;https://t.co/mcoDcM1xpU&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 09 Aug 2022 14:50:33 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1557016489139773442</link>
			<guid>https://twitter.com/mathling/status/1557016489139773442</guid>
			<source:markdown>Experimenting (spot the debugging marks)&#10;&#10;#XQuery #SVG https://t.co/mcoDcM1xpU&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@hcayless A bit like lightning or summat, yeah?&lt;/p&gt;&#10;</description>
			<pubDate>Sat, 06 Aug 2022 18:14:20 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555980607804436480</link>
			<guid>https://twitter.com/mathling/status/1555980607804436480</guid>
			<source:markdown>@hcayless A bit like lightning or summat, yeah?&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Experimenting&lt;/p&gt;&#10;&lt;p&gt;Some negative coefficients in the polynomial spiral equations&lt;/p&gt;&#10;&lt;p&gt;I probably need more interpolating points to kill the jaggies &lt;a href=&quot;https://t.co/AD0VuM6uAc&quot;&gt;https://t.co/AD0VuM6uAc&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;A little smoother&#10;#XQuery #SVG &lt;a href=&quot;https://t.co/Abo3PlHVHu&quot;&gt;https://t.co/Abo3PlHVHu&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Sat, 06 Aug 2022 17:29:20 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555969284894953472</link>
			<guid>https://twitter.com/mathling/status/1555969284894953472</guid>
			<source:markdown>Experimenting&#10;&#10;Some negative coefficients in the polynomial spiral equations&#10;&#10;I probably need more interpolating points to kill the jaggies https://t.co/AD0VuM6uAc&#10;&#10;&#10;A little smoother&#10;#XQuery #SVG https://t.co/Abo3PlHVHu&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Thus endeth my live-tweeting of #balisage2022&lt;/p&gt;&#10;&lt;p&gt;Non-markup followers, thank you for your patience&lt;/p&gt;&#10;&lt;p&gt;We return to normal service&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 16:57:55 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555598989814165504</link>
			<guid>https://twitter.com/mathling/status/1555598989814165504</guid>
			<source:markdown>Thus endeth my live-tweeting of #balisage2022&#10;&#10;Non-markup followers, thank you for your patience&#10;&#10;We return to normal service&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Excel to Excel using XML, really? (LB)&#10;Geert Bormans&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Context: Excel pollution reports, want to merge/transform&lt;/p&gt;&#10;&lt;p&gt;Really wanted a bit more [shock!] validation/correction;&#10;early feedback on quality of data, as report&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: 3 object types, 2000 sites, &amp;gt;2000 installations, 200 installation parts&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Code mapping (value to code, value to concept URI), 50-100 cross-object conditional mapping&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Dump everything into 100MB XML file&#10;QA errors: 10000+ error messages on first iterations&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: In the end: XProc 3 pipeline&#10;Practice is to save whole folder (including code) into SVN so have data in branch after each run&#10;Convert early on to semantic XML so good for comparison&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Rule based (Schematron) quality report, able to filter out and sort based on rules they care about&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: (Shows example)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Just getting table out of Excel one sheet at a time&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Excel XML format is complex, can be daunting, but allows us to do what we want to do&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: (Showing details of pipeline)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: XML stack -- a good choice?&#10;Yes. Would have been a lot more work.&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Rules-based approach (XSLT, Schematron) enabled quick updates based on early feedback&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 15:54:51 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555583118936907776</link>
			<guid>https://twitter.com/mathling/status/1555583118936907776</guid>
			<source:markdown>Excel to Excel using XML, really? (LB)&#10;Geert Bormans&#10;#balisage2022&#10;&#10;&#10;GB: Context: Excel pollution reports, want to merge/transform&#10;&#10;Really wanted a bit more [shock!] validation/correction;&#10;early feedback on quality of data, as report&#10;&#10;#balisage2022&#10;&#10;GB: 3 object types, 2000 sites, &amp;gt;2000 installations, 200 installation parts&#10;#balisage2022&#10;&#10;GB: Code mapping (value to code, value to concept URI), 50-100 cross-object conditional mapping&#10;&#10;#balisage2022&#10;&#10;GB: Dump everything into 100MB XML file&#10;QA errors: 10000+ error messages on first iterations&#10;#balisage2022&#10;&#10;GB: In the end: XProc 3 pipeline&#10;Practice is to save whole folder (including code) into SVN so have data in branch after each run&#10;Convert early on to semantic XML so good for comparison&#10;#balisage2022&#10;&#10;GB: Rule based (Schematron) quality report, able to filter out and sort based on rules they care about&#10;#balisage2022&#10;&#10;GB: (Shows example)&#10;#balisage2022&#10;&#10;GB: Just getting table out of Excel one sheet at a time&#10;#balisage2022&#10;&#10;GB: Excel XML format is complex, can be daunting, but allows us to do what we want to do&#10;#balisage2022&#10;&#10;GB: (Showing details of pipeline)&#10;#balisage2022&#10;&#10;GB: XML stack -- a good choice?&#10;Yes. Would have been a lot more work.&#10;#balisage2022&#10;&#10;GB: Rules-based approach (XSLT, Schematron) enabled quick updates based on early feedback&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Multiple String Comparison in XSLT&#10;Joel Kalvesmaki&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Multiple string difference (N-way difference, octopus difference)&lt;/p&gt;&#10;&lt;p&gt;Differences should be weighed, not counted&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: State of the field: many different diff utilities, mostly between 2 or 3, some with more&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Challenges:&#10;customization, visualization, quality&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate runs in log time by cumulative string, subquadratic in number of versions, pre- and post-processing,...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate depends on tan:diff&#10;Algorithm based on notion of shared sample strings&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Logarithmic time, tokenization and other preprocessing not required&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate() iteratively uses tan:diff(), fast, except when there are lots and lots of versions&lt;/p&gt;&#10;&lt;p&gt;Realized approach was somewhat naive&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: My approach evolved around concept of super-skeleton: look for long samples that appear in every version and use those as anchors, if can&amp;#39;t find one, revert to older approach&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: So needed to update tan:diff() to handle N-way&#10;New implementation of tan:collate() now available (just recently)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Test suite in paper based on gradual corruption of text; can measure quality, commonality, superskeleton metric&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Comparing perf/quality of the three modes (naive no sort, CC/sort, superskeleton) wrt size of text, amount of corruption&lt;/p&gt;&#10;&lt;p&gt;Summary: looks good!&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Using tan:collate()&#10;Dev: import TAN library&#10;General: Use TAN Diff+ application&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: (Demo)&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 14:48:31 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555566424046780416</link>
			<guid>https://twitter.com/mathling/status/1555566424046780416</guid>
			<source:markdown>Multiple String Comparison in XSLT&#10;Joel Kalvesmaki&#10;#balisage2022&#10;&#10;&#10;JK: Multiple string difference (N-way difference, octopus difference)&#10;&#10;Differences should be weighed, not counted&#10;#balisage2022&#10;&#10;JK: State of the field: many different diff utilities, mostly between 2 or 3, some with more&#10;#balisage2022&#10;&#10;JK: Challenges:&#10;customization, visualization, quality&#10;#balisage2022&#10;&#10;JK: tan:collate runs in log time by cumulative string, subquadratic in number of versions, pre- and post-processing,...&#10;#balisage2022&#10;&#10;JK: tan:collate depends on tan:diff&#10;Algorithm based on notion of shared sample strings&#10;#balisage2022&#10;&#10;JK: Logarithmic time, tokenization and other preprocessing not required&#10;#balisage2022&#10;&#10;JK: tan:collate() iteratively uses tan:diff(), fast, except when there are lots and lots of versions&#10;&#10;Realized approach was somewhat naive&#10;#balisage2022&#10;&#10;JK: My approach evolved around concept of super-skeleton: look for long samples that appear in every version and use those as anchors, if can't find one, revert to older approach&#10;&#10;#balisage2022&#10;&#10;JK: So needed to update tan:diff() to handle N-way&#10;New implementation of tan:collate() now available (just recently)&#10;#balisage2022&#10;&#10;JK: Test suite in paper based on gradual corruption of text; can measure quality, commonality, superskeleton metric&#10;&#10;#balisage2022&#10;&#10;JK: Comparing perf/quality of the three modes (naive no sort, CC/sort, superskeleton) wrt size of text, amount of corruption&#10;&#10;Summary: looks good!&#10;#balisage2022&#10;&#10;JK: Using tan:collate()&#10;Dev: import TAN library&#10;General: Use TAN Diff+ application&#10;#balisage2022&#10;&#10;JK: (Demo)&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;😱 &lt;a href=&quot;https://t.co/MhpgwUmKZD&quot;&gt;https://t.co/MhpgwUmKZD&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 14:01:36 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555554619396214786</link>
			<guid>https://twitter.com/mathling/status/1555554619396214786</guid>
			<source:markdown>😱 https://t.co/MhpgwUmKZD&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;The Impossible Task of Comparing CALS Tables&#10;Robin La Fontaine, John Francis&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Basic CALS table easy enough, but things can get more complex:&#10;horizontal spans: colspecs, namest/nameend as name refs to indicate spans&#10;vertical spans: morerows=n&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Our approach for many years: use the native XML directly&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Example of swapping columns: every cell in those columns shows a diff which is... not optimal&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: How to approach impossible problem?&#10;Step 1: Ignore something to make it a simpler problem&#10;Step 2: Solve simpler problem&#10;Step 3: Add back what was ignored to get improved result&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF:&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;Regularize to make rectangular grid&lt;/li&gt;&#10;&lt;li&gt;Align columns based on content&lt;/li&gt;&#10;&lt;li&gt;Key cells in each row based on column alignment&lt;/li&gt;&#10;&lt;li&gt;Compare table rows using column alignment&lt;/li&gt;&#10;&lt;li&gt;Restore spans based on B priority&#10;#balisage2022&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;RLF: (Shows some examples)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Difficulties&#10;Blank columns just to help with the rendering&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Based on what users want, leads to need to user controls but that leads to complexity in implementation, testing, etc.&#10;Make sure defaults are good!&#10;Controls: column ordering, keying columns; use PIs for that&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: What makes a &amp;#39;good&amp;#39; standard?&#10;Try to make sure only one way to represent something&#10;Avoid shorthands&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Conclusions&#10;Native XML comparison works well most of the time, but is easily tripped up&#10;Content-based approach seems to be significant improvement&#10;Standards folks: avoid shorthands and multiple ways to represent same concept&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 13:58:44 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555553895685840896</link>
			<guid>https://twitter.com/mathling/status/1555553895685840896</guid>
			<source:markdown>The Impossible Task of Comparing CALS Tables&#10;Robin La Fontaine, John Francis&#10;#balisage2022&#10;&#10;&#10;RLF: Basic CALS table easy enough, but things can get more complex:&#10;horizontal spans: colspecs, namest/nameend as name refs to indicate spans&#10;vertical spans: morerows=n&#10;#balisage2022&#10;&#10;RLF: Our approach for many years: use the native XML directly&#10;#balisage2022&#10;&#10;RLF: Example of swapping columns: every cell in those columns shows a diff which is... not optimal&#10;#balisage2022&#10;&#10;RLF: How to approach impossible problem?&#10;Step 1: Ignore something to make it a simpler problem&#10;Step 2: Solve simpler problem&#10;Step 3: Add back what was ignored to get improved result&#10;#balisage2022&#10;&#10;RLF:&#10;1. Regularize to make rectangular grid&#10;2. Align columns based on content&#10;3. Key cells in each row based on column alignment&#10;4. Compare table rows using column alignment&#10;4. Restore spans based on B priority&#10;#balisage2022&#10;&#10;RLF: (Shows some examples)&#10;#balisage2022&#10;&#10;RLF: Difficulties&#10;Blank columns just to help with the rendering&#10;#balisage2022&#10;&#10;RLF: Based on what users want, leads to need to user controls but that leads to complexity in implementation, testing, etc.&#10;Make sure defaults are good!&#10;Controls: column ordering, keying columns; use PIs for that&#10;#balisage2022&#10;&#10;RLF: What makes a 'good' standard?&#10;Try to make sure only one way to represent something&#10;Avoid shorthands&#10;#balisage2022&#10;&#10;RLF: Conclusions&#10;Native XML comparison works well most of the time, but is easily tripped up&#10;Content-based approach seems to be significant improvement&#10;Standards folks: avoid shorthands and multiple ways to represent same concept&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Metadata for Creators&#10;Mary Holstege&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[Which I will not be live-tweeting for the obvious reasons]&#10;[Metadata that is created as part of the creation of the work, about the process that created the work, that drives the creation of new works; considerations]&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 18:46:27 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555263914711011329</link>
			<guid>https://twitter.com/mathling/status/1555263914711011329</guid>
			<source:markdown>Metadata for Creators&#10;Mary Holstege&#10;#balisage2022&#10;&#10;[Which I will not be live-tweeting for the obvious reasons]&#10;[Metadata that is created as part of the creation of the work, about the process that created the work, that drives the creation of new works; considerations]&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;On Translating the TEI (LB)&#10;Hugh Cayless&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: TEI guidelines: specification pages that are highly structured, plus lots of running prose&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: Lots of efforts to translated the TEI guidelines into various language, going back some time&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: XSLT to extract translatable bits, push that into a Google sheet where folks have at it, then need to put that back together&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Shows example translation of spec page&#10;Markers for the bits that are out of date&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Looking at markup, e.g. see multiple gloss (etc.) elements with version dates and xml:lang&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Guidelines sources hosted on GitHub&#10;TEI Council edits, changes come via direct pushes or pull requests&#10;Want to hook translations in via PRs&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: (Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Browser-based as much as possible&#10;Issue: authenticating to GitHub, so little bit of OAUTH sign-in handled server-side&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Display is via Ceteicean&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[Crickey, all those TC&amp;#39;s should be HC&amp;#39;s, sorry about that]&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: Problems and areas for improvements&lt;/p&gt;&#10;&lt;p&gt;Keep tweaking things, hard to get to stable release&lt;/p&gt;&#10;&lt;p&gt;What does it mean to translate an example? What are you translating? Will translation change import of example? &lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: The problem of meaning&lt;/p&gt;&#10;&lt;p&gt;&amp;quot;What even does that mean in English?!&amp;quot;&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 17:55:30 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555251094208389120</link>
			<guid>https://twitter.com/mathling/status/1555251094208389120</guid>
			<source:markdown>On Translating the TEI (LB)&#10;Hugh Cayless&#10;#balisage2022&#10;&#10;&#10;HC: TEI guidelines: specification pages that are highly structured, plus lots of running prose&#10;#balisage2022&#10;&#10;HC: Lots of efforts to translated the TEI guidelines into various language, going back some time&#10;#balisage2022&#10;&#10;TC: XSLT to extract translatable bits, push that into a Google sheet where folks have at it, then need to put that back together&#10;&#10;#balisage2022&#10;&#10;TC: Shows example translation of spec page&#10;Markers for the bits that are out of date&#10;&#10;#balisage2022&#10;&#10;TC: Looking at markup, e.g. see multiple gloss (etc.) elements with version dates and xml:lang&#10;#balisage2022&#10;&#10;TC: Guidelines sources hosted on GitHub&#10;TEI Council edits, changes come via direct pushes or pull requests&#10;Want to hook translations in via PRs&#10;#balisage2022&#10;&#10;TC: (Demo)&#10;#balisage2022&#10;&#10;TC: Browser-based as much as possible&#10;Issue: authenticating to GitHub, so little bit of OAUTH sign-in handled server-side&#10;#balisage2022&#10;&#10;TC: Display is via Ceteicean&#10;#balisage2022&#10;&#10;[Crickey, all those TC's should be HC's, sorry about that]&#10;#balisage2022&#10;&#10;HC: Problems and areas for improvements&#10;&#10;Keep tweaking things, hard to get to stable release&#10;&#10;What does it mean to translate an example? What are you translating? Will translation change import of example?&#10;&#10;#balisage2022&#10;&#10;HC: The problem of meaning&#10;&#10;&quot;What even does that mean in English?!&quot;&#10;&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		</channel>
	</rss>
