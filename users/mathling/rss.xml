<?xml version="1.0" encoding="UTF-8"?>
<!-- RSS generated by opmltweets v1.5.0 on Sat, 06 Aug 2022 17:46:41 GMT -->
<rss version="2.0" xmlns:source="http://source.scripting.com/">
	<channel>
		<title>mathling tweets</title>
		<link>http://twitter.com/mathling</link>
		<description>A feed of recent tweets from mathling.</description>
		<pubDate>Sat, 06 Aug 2022 17:29:20 GMT</pubDate>
		<language>en-us</language>
		<generator>opmltweets v1.5.0</generator>
		<docs>http://cyber.law.harvard.edu/rss/rss.html</docs>
		<lastBuildDate>Sat, 06 Aug 2022 17:46:41 GMT</lastBuildDate>
		<cloud domain="rpc.rsscloud.io" port="5337" path="/pleaseNotify" registerProcedure="" protocol="http-post" />
		<source:account service="twitter">mathling</source:account>
		<source:localTime>Sat, August 6, 2022 1:46 PM EDT</source:localTime>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Experimenting&lt;/p&gt;&#10;&lt;p&gt;Some negative coefficients in the polynomial spiral equations&lt;/p&gt;&#10;&lt;p&gt;I probably need more interpolating points to kill the jaggies &lt;a href=&quot;https://t.co/AD0VuM6uAc&quot;&gt;https://t.co/AD0VuM6uAc&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;A little smoother&#10;#XQuery #SVG &lt;a href=&quot;https://t.co/Abo3PlHVHu&quot;&gt;https://t.co/Abo3PlHVHu&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Sat, 06 Aug 2022 17:29:20 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555969284894953472</link>
			<guid>https://twitter.com/mathling/status/1555969284894953472</guid>
			<source:markdown>Experimenting&#10;&#10;Some negative coefficients in the polynomial spiral equations&#10;&#10;I probably need more interpolating points to kill the jaggies https://t.co/AD0VuM6uAc&#10;&#10;&#10;A little smoother&#10;#XQuery #SVG https://t.co/Abo3PlHVHu&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Thus endeth my live-tweeting of #balisage2022&lt;/p&gt;&#10;&lt;p&gt;Non-markup followers, thank you for your patience&lt;/p&gt;&#10;&lt;p&gt;We return to normal service&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 16:57:55 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555598989814165504</link>
			<guid>https://twitter.com/mathling/status/1555598989814165504</guid>
			<source:markdown>Thus endeth my live-tweeting of #balisage2022&#10;&#10;Non-markup followers, thank you for your patience&#10;&#10;We return to normal service&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Excel to Excel using XML, really? (LB)&#10;Geert Bormans&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Context: Excel pollution reports, want to merge/transform&lt;/p&gt;&#10;&lt;p&gt;Really wanted a bit more [shock!] validation/correction;&#10;early feedback on quality of data, as report&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: 3 object types, 2000 sites, &amp;gt;2000 installations, 200 installation parts&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Code mapping (value to code, value to concept URI), 50-100 cross-object conditional mapping&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Dump everything into 100MB XML file&#10;QA errors: 10000+ error messages on first iterations&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: In the end: XProc 3 pipeline&#10;Practice is to save whole folder (including code) into SVN so have data in branch after each run&#10;Convert early on to semantic XML so good for comparison&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Rule based (Schematron) quality report, able to filter out and sort based on rules they care about&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: (Shows example)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Just getting table out of Excel one sheet at a time&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Excel XML format is complex, can be daunting, but allows us to do what we want to do&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: (Showing details of pipeline)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: XML stack -- a good choice?&#10;Yes. Would have been a lot more work.&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GB: Rules-based approach (XSLT, Schematron) enabled quick updates based on early feedback&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 15:54:51 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555583118936907776</link>
			<guid>https://twitter.com/mathling/status/1555583118936907776</guid>
			<source:markdown>Excel to Excel using XML, really? (LB)&#10;Geert Bormans&#10;#balisage2022&#10;&#10;&#10;GB: Context: Excel pollution reports, want to merge/transform&#10;&#10;Really wanted a bit more [shock!] validation/correction;&#10;early feedback on quality of data, as report&#10;&#10;#balisage2022&#10;&#10;GB: 3 object types, 2000 sites, &amp;gt;2000 installations, 200 installation parts&#10;#balisage2022&#10;&#10;GB: Code mapping (value to code, value to concept URI), 50-100 cross-object conditional mapping&#10;&#10;#balisage2022&#10;&#10;GB: Dump everything into 100MB XML file&#10;QA errors: 10000+ error messages on first iterations&#10;#balisage2022&#10;&#10;GB: In the end: XProc 3 pipeline&#10;Practice is to save whole folder (including code) into SVN so have data in branch after each run&#10;Convert early on to semantic XML so good for comparison&#10;#balisage2022&#10;&#10;GB: Rule based (Schematron) quality report, able to filter out and sort based on rules they care about&#10;#balisage2022&#10;&#10;GB: (Shows example)&#10;#balisage2022&#10;&#10;GB: Just getting table out of Excel one sheet at a time&#10;#balisage2022&#10;&#10;GB: Excel XML format is complex, can be daunting, but allows us to do what we want to do&#10;#balisage2022&#10;&#10;GB: (Showing details of pipeline)&#10;#balisage2022&#10;&#10;GB: XML stack -- a good choice?&#10;Yes. Would have been a lot more work.&#10;#balisage2022&#10;&#10;GB: Rules-based approach (XSLT, Schematron) enabled quick updates based on early feedback&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Multiple String Comparison in XSLT&#10;Joel Kalvesmaki&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Multiple string difference (N-way difference, octopus difference)&lt;/p&gt;&#10;&lt;p&gt;Differences should be weighed, not counted&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: State of the field: many different diff utilities, mostly between 2 or 3, some with more&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Challenges:&#10;customization, visualization, quality&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate runs in log time by cumulative string, subquadratic in number of versions, pre- and post-processing,...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate depends on tan:diff&#10;Algorithm based on notion of shared sample strings&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Logarithmic time, tokenization and other preprocessing not required&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: tan:collate() iteratively uses tan:diff(), fast, except when there are lots and lots of versions&lt;/p&gt;&#10;&lt;p&gt;Realized approach was somewhat naive&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: My approach evolved around concept of super-skeleton: look for long samples that appear in every version and use those as anchors, if can&amp;#39;t find one, revert to older approach&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: So needed to update tan:diff() to handle N-way&#10;New implementation of tan:collate() now available (just recently)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Test suite in paper based on gradual corruption of text; can measure quality, commonality, superskeleton metric&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Comparing perf/quality of the three modes (naive no sort, CC/sort, superskeleton) wrt size of text, amount of corruption&lt;/p&gt;&#10;&lt;p&gt;Summary: looks good!&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: Using tan:collate()&#10;Dev: import TAN library&#10;General: Use TAN Diff+ application&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: (Demo)&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 14:48:31 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555566424046780416</link>
			<guid>https://twitter.com/mathling/status/1555566424046780416</guid>
			<source:markdown>Multiple String Comparison in XSLT&#10;Joel Kalvesmaki&#10;#balisage2022&#10;&#10;&#10;JK: Multiple string difference (N-way difference, octopus difference)&#10;&#10;Differences should be weighed, not counted&#10;#balisage2022&#10;&#10;JK: State of the field: many different diff utilities, mostly between 2 or 3, some with more&#10;#balisage2022&#10;&#10;JK: Challenges:&#10;customization, visualization, quality&#10;#balisage2022&#10;&#10;JK: tan:collate runs in log time by cumulative string, subquadratic in number of versions, pre- and post-processing,...&#10;#balisage2022&#10;&#10;JK: tan:collate depends on tan:diff&#10;Algorithm based on notion of shared sample strings&#10;#balisage2022&#10;&#10;JK: Logarithmic time, tokenization and other preprocessing not required&#10;#balisage2022&#10;&#10;JK: tan:collate() iteratively uses tan:diff(), fast, except when there are lots and lots of versions&#10;&#10;Realized approach was somewhat naive&#10;#balisage2022&#10;&#10;JK: My approach evolved around concept of super-skeleton: look for long samples that appear in every version and use those as anchors, if can't find one, revert to older approach&#10;&#10;#balisage2022&#10;&#10;JK: So needed to update tan:diff() to handle N-way&#10;New implementation of tan:collate() now available (just recently)&#10;#balisage2022&#10;&#10;JK: Test suite in paper based on gradual corruption of text; can measure quality, commonality, superskeleton metric&#10;&#10;#balisage2022&#10;&#10;JK: Comparing perf/quality of the three modes (naive no sort, CC/sort, superskeleton) wrt size of text, amount of corruption&#10;&#10;Summary: looks good!&#10;#balisage2022&#10;&#10;JK: Using tan:collate()&#10;Dev: import TAN library&#10;General: Use TAN Diff+ application&#10;#balisage2022&#10;&#10;JK: (Demo)&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;😱 &lt;a href=&quot;https://t.co/MhpgwUmKZD&quot;&gt;https://t.co/MhpgwUmKZD&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 14:01:36 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555554619396214786</link>
			<guid>https://twitter.com/mathling/status/1555554619396214786</guid>
			<source:markdown>😱 https://t.co/MhpgwUmKZD&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;The Impossible Task of Comparing CALS Tables&#10;Robin La Fontaine, John Francis&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Basic CALS table easy enough, but things can get more complex:&#10;horizontal spans: colspecs, namest/nameend as name refs to indicate spans&#10;vertical spans: morerows=n&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Our approach for many years: use the native XML directly&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Example of swapping columns: every cell in those columns shows a diff which is... not optimal&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: How to approach impossible problem?&#10;Step 1: Ignore something to make it a simpler problem&#10;Step 2: Solve simpler problem&#10;Step 3: Add back what was ignored to get improved result&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF:&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;Regularize to make rectangular grid&lt;/li&gt;&#10;&lt;li&gt;Align columns based on content&lt;/li&gt;&#10;&lt;li&gt;Key cells in each row based on column alignment&lt;/li&gt;&#10;&lt;li&gt;Compare table rows using column alignment&lt;/li&gt;&#10;&lt;li&gt;Restore spans based on B priority&#10;#balisage2022&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;RLF: (Shows some examples)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Difficulties&#10;Blank columns just to help with the rendering&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Based on what users want, leads to need to user controls but that leads to complexity in implementation, testing, etc.&#10;Make sure defaults are good!&#10;Controls: column ordering, keying columns; use PIs for that&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: What makes a &amp;#39;good&amp;#39; standard?&#10;Try to make sure only one way to represent something&#10;Avoid shorthands&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RLF: Conclusions&#10;Native XML comparison works well most of the time, but is easily tripped up&#10;Content-based approach seems to be significant improvement&#10;Standards folks: avoid shorthands and multiple ways to represent same concept&lt;/p&gt;&#10;</description>
			<pubDate>Fri, 05 Aug 2022 13:58:44 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555553895685840896</link>
			<guid>https://twitter.com/mathling/status/1555553895685840896</guid>
			<source:markdown>The Impossible Task of Comparing CALS Tables&#10;Robin La Fontaine, John Francis&#10;#balisage2022&#10;&#10;&#10;RLF: Basic CALS table easy enough, but things can get more complex:&#10;horizontal spans: colspecs, namest/nameend as name refs to indicate spans&#10;vertical spans: morerows=n&#10;#balisage2022&#10;&#10;RLF: Our approach for many years: use the native XML directly&#10;#balisage2022&#10;&#10;RLF: Example of swapping columns: every cell in those columns shows a diff which is... not optimal&#10;#balisage2022&#10;&#10;RLF: How to approach impossible problem?&#10;Step 1: Ignore something to make it a simpler problem&#10;Step 2: Solve simpler problem&#10;Step 3: Add back what was ignored to get improved result&#10;#balisage2022&#10;&#10;RLF:&#10;1. Regularize to make rectangular grid&#10;2. Align columns based on content&#10;3. Key cells in each row based on column alignment&#10;4. Compare table rows using column alignment&#10;4. Restore spans based on B priority&#10;#balisage2022&#10;&#10;RLF: (Shows some examples)&#10;#balisage2022&#10;&#10;RLF: Difficulties&#10;Blank columns just to help with the rendering&#10;#balisage2022&#10;&#10;RLF: Based on what users want, leads to need to user controls but that leads to complexity in implementation, testing, etc.&#10;Make sure defaults are good!&#10;Controls: column ordering, keying columns; use PIs for that&#10;#balisage2022&#10;&#10;RLF: What makes a 'good' standard?&#10;Try to make sure only one way to represent something&#10;Avoid shorthands&#10;#balisage2022&#10;&#10;RLF: Conclusions&#10;Native XML comparison works well most of the time, but is easily tripped up&#10;Content-based approach seems to be significant improvement&#10;Standards folks: avoid shorthands and multiple ways to represent same concept&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Metadata for Creators&#10;Mary Holstege&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[Which I will not be live-tweeting for the obvious reasons]&#10;[Metadata that is created as part of the creation of the work, about the process that created the work, that drives the creation of new works; considerations]&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 18:46:27 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555263914711011329</link>
			<guid>https://twitter.com/mathling/status/1555263914711011329</guid>
			<source:markdown>Metadata for Creators&#10;Mary Holstege&#10;#balisage2022&#10;&#10;[Which I will not be live-tweeting for the obvious reasons]&#10;[Metadata that is created as part of the creation of the work, about the process that created the work, that drives the creation of new works; considerations]&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;On Translating the TEI (LB)&#10;Hugh Cayless&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: TEI guidelines: specification pages that are highly structured, plus lots of running prose&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: Lots of efforts to translated the TEI guidelines into various language, going back some time&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: XSLT to extract translatable bits, push that into a Google sheet where folks have at it, then need to put that back together&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Shows example translation of spec page&#10;Markers for the bits that are out of date&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Looking at markup, e.g. see multiple gloss (etc.) elements with version dates and xml:lang&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Guidelines sources hosted on GitHub&#10;TEI Council edits, changes come via direct pushes or pull requests&#10;Want to hook translations in via PRs&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: (Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Browser-based as much as possible&#10;Issue: authenticating to GitHub, so little bit of OAUTH sign-in handled server-side&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;TC: Display is via Ceteicean&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[Crickey, all those TC&amp;#39;s should be HC&amp;#39;s, sorry about that]&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: Problems and areas for improvements&lt;/p&gt;&#10;&lt;p&gt;Keep tweaking things, hard to get to stable release&lt;/p&gt;&#10;&lt;p&gt;What does it mean to translate an example? What are you translating? Will translation change import of example? &lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;HC: The problem of meaning&lt;/p&gt;&#10;&lt;p&gt;&amp;quot;What even does that mean in English?!&amp;quot;&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 17:55:30 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555251094208389120</link>
			<guid>https://twitter.com/mathling/status/1555251094208389120</guid>
			<source:markdown>On Translating the TEI (LB)&#10;Hugh Cayless&#10;#balisage2022&#10;&#10;&#10;HC: TEI guidelines: specification pages that are highly structured, plus lots of running prose&#10;#balisage2022&#10;&#10;HC: Lots of efforts to translated the TEI guidelines into various language, going back some time&#10;#balisage2022&#10;&#10;TC: XSLT to extract translatable bits, push that into a Google sheet where folks have at it, then need to put that back together&#10;&#10;#balisage2022&#10;&#10;TC: Shows example translation of spec page&#10;Markers for the bits that are out of date&#10;&#10;#balisage2022&#10;&#10;TC: Looking at markup, e.g. see multiple gloss (etc.) elements with version dates and xml:lang&#10;#balisage2022&#10;&#10;TC: Guidelines sources hosted on GitHub&#10;TEI Council edits, changes come via direct pushes or pull requests&#10;Want to hook translations in via PRs&#10;#balisage2022&#10;&#10;TC: (Demo)&#10;#balisage2022&#10;&#10;TC: Browser-based as much as possible&#10;Issue: authenticating to GitHub, so little bit of OAUTH sign-in handled server-side&#10;#balisage2022&#10;&#10;TC: Display is via Ceteicean&#10;#balisage2022&#10;&#10;[Crickey, all those TC's should be HC's, sorry about that]&#10;#balisage2022&#10;&#10;HC: Problems and areas for improvements&#10;&#10;Keep tweaking things, hard to get to stable release&#10;&#10;What does it mean to translate an example? What are you translating? Will translation change import of example?&#10;&#10;#balisage2022&#10;&#10;HC: The problem of meaning&#10;&#10;&quot;What even does that mean in English?!&quot;&#10;&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@peteaven @ronhitchens @jimwebber I like the general idea of giving the people an out if the legislature keeps thwarting their will, but it has become subject to terrific abuse of late (cf the third proposition in as many years that is essentially a negotiating stunt involving a particular union/set of employers)&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 16:58:11 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555236669669814272</link>
			<guid>https://twitter.com/mathling/status/1555236669669814272</guid>
			<source:markdown>@peteaven @ronhitchens @jimwebber I like the general idea of giving the people an out if the legislature keeps thwarting their will, but it has become subject to terrific abuse of late (cf the third proposition in as many years that is essentially a negotiating stunt involving a particular union/set of employers)&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Biblical Linguistics in the GitHub Jungle (LB)&#10;Jonathan Robie&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Goal is to support Bible translations, data for high impact knowledge workers&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Knowledge is abundant: ability to use it is scarce&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Have a lot of data sets, and have partner data sets&#10;Morphology, syntax trees, word senses, glosses, transliterations, etc.&#10;Some of the &amp;quot;partners&amp;quot; are &amp;quot;something that was put up on github&amp;quot; and we want to use their data&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Data integration in practice&#10;Example: Hebrew syntax tree + morphology&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Some specific issues: extraneous LTR marker, use of pre-Unicode coding for Hebrew characters, ...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: &amp;quot;I&amp;#39;m going to teach you all linguistics and Biblical Hebrew and then get back to the example&amp;quot;&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Example shows one dataset splits up one of the &amp;quot;words&amp;quot; and the other keeps it together&lt;/p&gt;&#10;&lt;p&gt;Need to establish common identifiers and units&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Spit out cases where text differs, then need to figure out why&#10;Different readings, different analysis of word boundaries, different spelling corrections, errors&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JR: Trying to give you a flavour of this&#10;The integration took some time, and was quite tricky&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 15:58:00 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555221523744452608</link>
			<guid>https://twitter.com/mathling/status/1555221523744452608</guid>
			<source:markdown>Biblical Linguistics in the GitHub Jungle (LB)&#10;Jonathan Robie&#10;#balisage2022&#10;&#10;&#10;JR: Goal is to support Bible translations, data for high impact knowledge workers&#10;#balisage2022&#10;&#10;JR: Knowledge is abundant: ability to use it is scarce&#10;#balisage2022&#10;&#10;JR: Have a lot of data sets, and have partner data sets&#10;Morphology, syntax trees, word senses, glosses, transliterations, etc.&#10;Some of the &quot;partners&quot; are &quot;something that was put up on github&quot; and we want to use their data&#10;#balisage2022&#10;&#10;JR: Data integration in practice&#10;Example: Hebrew syntax tree + morphology&#10;#balisage2022&#10;&#10;JR: Some specific issues: extraneous LTR marker, use of pre-Unicode coding for Hebrew characters, ...&#10;#balisage2022&#10;&#10;JR: &quot;I'm going to teach you all linguistics and Biblical Hebrew and then get back to the example&quot;&#10;&#10;#balisage2022&#10;&#10;JR: Example shows one dataset splits up one of the &quot;words&quot; and the other keeps it together&#10;&#10;Need to establish common identifiers and units&#10;#balisage2022&#10;&#10;JR: Spit out cases where text differs, then need to figure out why&#10;Different readings, different analysis of word boundaries, different spelling corrections, errors&#10;#balisage2022&#10;&#10;JR: Trying to give you a flavour of this&#10;The integration took some time, and was quite tricky&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Project Mirabel: XQuery-Based Documentation Reporting and Exploration System&#10;Eliot Kimber&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Lot of content, lot of churn&#10;Authored in DITA XML, 200 writers around the globe&#10;OxygenXML desktop, GitHub enterprise storage, CI job to build&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: &amp;quot;A lot of content, not a lot of management&amp;quot;&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Project Mirabel&#10;Goal: R/O access to information about content&#10;Metrics, dashboards, trends, content details, reports&lt;/p&gt;&#10;&lt;p&gt;Provide data to make data-driven decisions&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: &amp;quot;Bundle&amp;quot; = top-level organizer for published content&#10;40K topics =&amp;gt; 30~ bundles =~ a product&#10;Bundle map =&amp;gt; submap =&amp;gt; topic&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: &amp;quot;Excel for Validation Errors&amp;quot;&#10;Manual: validate w/ Oxygen, save as HTML, paste into Excel&#10;As once in a while, OK. As daily report... let&amp;#39;s automate&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: VP wanted dashboard, validation report&#10;Mad coding and getting up to speed on BaseX new features and XQuery 3 ensued&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Shout-out to &amp;quot;XQuery for Humanists&amp;quot;&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Create where-used and doc-to-bundle&#10;&amp;quot;easy&amp;quot;&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Bad data breaks good algorithm&lt;/p&gt;&#10;&lt;p&gt;Algorithm worked great on test case, but ran slowly over real data&lt;/p&gt;&#10;&lt;p&gt;Solution: process in ascending ref count order to avoid processing giant map&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: But I&amp;#39;m not going to stop there, because I am a menace&lt;/p&gt;&#10;&lt;p&gt;Want  a content explorer&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EK: Challenges&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;Managing concurrency in BaseX&lt;/li&gt;&#10;&lt;li&gt;Optimizing queries&lt;/li&gt;&#10;&lt;li&gt;Unix admin&lt;/li&gt;&#10;&lt;li&gt;Serializing sequences updating operations&lt;/li&gt;&#10;&lt;li&gt;DITA class-based processing (for perf dropped DTDs, which is where classes were...)&lt;/li&gt;&#10;&lt;li&gt;Lack of browser UI dev skills&#10;#balisage2022&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;EK: XQuery as a language is actually accessible to Python and JavaScript programmers&#10;[MH has flashbacks to 5 years of internal arguments at Previous Employer]&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 14:56:23 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555206016639193088</link>
			<guid>https://twitter.com/mathling/status/1555206016639193088</guid>
			<source:markdown>Project Mirabel: XQuery-Based Documentation Reporting and Exploration System&#10;Eliot Kimber&#10;#balisage2022&#10;&#10;&#10;EK: Lot of content, lot of churn&#10;Authored in DITA XML, 200 writers around the globe&#10;OxygenXML desktop, GitHub enterprise storage, CI job to build&#10;#balisage2022&#10;&#10;EK: &quot;A lot of content, not a lot of management&quot;&#10;#balisage2022&#10;&#10;EK: Project Mirabel&#10;Goal: R/O access to information about content&#10;Metrics, dashboards, trends, content details, reports&#10;&#10;Provide data to make data-driven decisions&#10;#balisage2022&#10;&#10;EK: &quot;Bundle&quot; = top-level organizer for published content&#10;40K topics =&amp;gt; 30~ bundles =~ a product&#10;Bundle map =&amp;gt; submap =&amp;gt; topic&#10;#balisage2022&#10;&#10;EK: &quot;Excel for Validation Errors&quot;&#10;Manual: validate w/ Oxygen, save as HTML, paste into Excel&#10;As once in a while, OK. As daily report... let's automate&#10;#balisage2022&#10;&#10;EK: VP wanted dashboard, validation report&#10;Mad coding and getting up to speed on BaseX new features and XQuery 3 ensued&#10;#balisage2022&#10;&#10;EK: Shout-out to &quot;XQuery for Humanists&quot;&#10;#balisage2022&#10;&#10;EK: Create where-used and doc-to-bundle&#10;&quot;easy&quot;&#10;#balisage2022&#10;&#10;EK: Bad data breaks good algorithm&#10;&#10;Algorithm worked great on test case, but ran slowly over real data&#10;&#10;Solution: process in ascending ref count order to avoid processing giant map&#10;&#10;#balisage2022&#10;&#10;EK: But I'm not going to stop there, because I am a menace&#10;&#10;Want  a content explorer&#10;&#10;#balisage2022&#10;&#10;EK: Challenges&#10;1. Managing concurrency in BaseX&#10;2. Optimizing queries&#10;3. Unix admin&#10;4. Serializing sequences updating operations&#10;5. DITA class-based processing (for perf dropped DTDs, which is where classes were...)&#10;6. Lack of browser UI dev skills&#10;#balisage2022&#10;&#10;EK: XQuery as a language is actually accessible to Python and JavaScript programmers&#10;[MH has flashbacks to 5 years of internal arguments at Previous Employer]&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;XSLT Extensions for JSON Processing&#10;Michael Kay&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: Talk = Mix of ideas wrt JSON in XSLT; some cooked, some more half-baked&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: What&amp;#39;s in XSLT 3.0?&#10;Some JSON-specific things (parse/serialize/convert functions), some applicable to data model behind JSON (maps and arrays, various functions, esp. maps)&#10;#balisage2020&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&#10;Mary timetravels again&lt;/p&gt;&#10;&lt;p&gt;MK: Prague paper 2016 looked at JSON transformation and best way was JSON =&amp;gt; XML =&amp;gt; JSON&#10;Which is... disappointing&#10;Can we do better? Transform natively?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: Consider two use cases&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;Leave everything except change one thing&lt;/li&gt;&#10;&lt;li&gt;Hierarchical inversion&#10;#balisage2022&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;MK: Issues&#10;No array constructor&#10;Map construction not aligned with map deconstruction&#10;No ancestor access in JSON tree&#10;Poor support types/patterns matching maps/arrays (JSON maps don&amp;#39;t have names)&#10;No suitable built-in template rules&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: (Shows solutions to two use cases, using various proposed mechanisms, to be looked at in a bit)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: Record types&#10;New way of describing maps, both ItemType and Pattern&#10;List keys in map, can put * at end to make extensible, can make keys optional, can provide types, keys have to be strings but don&amp;#39;t have to be NCNames, can define as recursive w/ &amp;#39;as ..&amp;#39;&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: Constructing/deconstructing maps and arrays&#10;Existing languages is sequence-focused, so want ways of decomposing array/map into sequence of pieces, and then reassemble&#10;map pieces are entries (key-value pairs)&#10;array pieces are parcels= item wraps sequence&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MK: via() function to give access to apply-templates stack (replacement for ancestor)&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Thu, 04 Aug 2022 13:58:03 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1555191336768532483</link>
			<guid>https://twitter.com/mathling/status/1555191336768532483</guid>
			<source:markdown>XSLT Extensions for JSON Processing&#10;Michael Kay&#10;#balisage2022&#10;&#10;&#10;MK: Talk = Mix of ideas wrt JSON in XSLT; some cooked, some more half-baked&#10;#balisage2022&#10;&#10;MK: What's in XSLT 3.0?&#10;Some JSON-specific things (parse/serialize/convert functions), some applicable to data model behind JSON (maps and arrays, various functions, esp. maps)&#10;#balisage2020&#10;&#10;#balisage2022&#10;Mary timetravels again&#10;&#10;MK: Prague paper 2016 looked at JSON transformation and best way was JSON =&amp;gt; XML =&amp;gt; JSON&#10;Which is... disappointing&#10;Can we do better? Transform natively?&#10;#balisage2022&#10;&#10;MK: Consider two use cases&#10;1. Leave everything except change one thing&#10;2. Hierarchical inversion&#10;#balisage2022&#10;&#10;MK: Issues&#10;No array constructor&#10;Map construction not aligned with map deconstruction&#10;No ancestor access in JSON tree&#10;Poor support types/patterns matching maps/arrays (JSON maps don't have names)&#10;No suitable built-in template rules&#10;#balisage2022&#10;&#10;MK: (Shows solutions to two use cases, using various proposed mechanisms, to be looked at in a bit)&#10;#balisage2022&#10;&#10;MK: Record types&#10;New way of describing maps, both ItemType and Pattern&#10;List keys in map, can put * at end to make extensible, can make keys optional, can provide types, keys have to be strings but don't have to be NCNames, can define as recursive w/ 'as ..'&#10;#balisage2022&#10;&#10;MK: Constructing/deconstructing maps and arrays&#10;Existing languages is sequence-focused, so want ways of decomposing array/map into sequence of pieces, and then reassemble&#10;map pieces are entries (key-value pairs)&#10;array pieces are parcels= item wraps sequence&#10;#balisage2022&#10;&#10;MK: via() function to give access to apply-templates stack (replacement for ancestor)&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<title>GenerativeArt interlude</title>
			<description>&lt;p&gt;Experiments in #SVG abuse&lt;/p&gt;&#10;&lt;p&gt;The waterlogged map book&lt;/p&gt;&#10;&lt;p&gt;#XQuery &lt;a href=&quot;https://t.co/H2x8wzzxUw&quot;&gt;https://t.co/H2x8wzzxUw&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;Damaged rectangles &lt;a href=&quot;https://t.co/PG0gtpj1zd&quot;&gt;https://t.co/PG0gtpj1zd&lt;/a&gt;&lt;/p&gt;&#10;&lt;p&gt;I&amp;#39;m creating vast point clouds of dots, exponentially biased toward the region boundaries, with colour choices driven by FBM noise.&lt;/p&gt;&#10;&lt;p&gt;Vast = millions&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 21:15:03 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554938926057394176</link>
			<guid>https://twitter.com/mathling/status/1554938926057394176</guid>
			<source:markdown>Experiments in #SVG abuse&#10;&#10;The waterlogged map book&#10;&#10;#XQuery https://t.co/H2x8wzzxUw&#10;&#10;&#10;Damaged rectangles https://t.co/PG0gtpj1zd&#10;&#10;I'm creating vast point clouds of dots, exponentially biased toward the region boundaries, with colour choices driven by FBM noise.&#10;&#10;Vast = millions&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;TFW you come back to the experimental render you kicked off in the morning with (you thought) 10 different outputs to see that you somehow typed 1110&lt;/p&gt;&#10;&lt;p&gt;Friends, it was not finished&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 21:04:16 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554936209012445186</link>
			<guid>https://twitter.com/mathling/status/1554936209012445186</guid>
			<source:markdown>TFW you come back to the experimental render you kicked off in the morning with (you thought) 10 different outputs to see that you somehow typed 1110&#10;&#10;Friends, it was not finished&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Markup Category Terminology over the Years: a First Look (LB)&#10;Allen H. Renear, Steven J. DeRose&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AR: Interested in how markup terminology has evolved and how that reflects changes in practice and attitudes&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AR: Terms of particular interest (roughly synonymous*)&#10;descriptive markup / procedural markup&#10;semantic  markup / presentational markup&#10;logical / physical&#10;structural, declarative, logical, content, conceptual, generic,...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AR: looking at occurrences on web and in Google scholar and differences between them&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AR: and looking at occurrences over time for various bigrams in Gscholar&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AR: And in G-Ngrams&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 18:56:17 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554904002898276352</link>
			<guid>https://twitter.com/mathling/status/1554904002898276352</guid>
			<source:markdown>Markup Category Terminology over the Years: a First Look (LB)&#10;Allen H. Renear, Steven J. DeRose&#10;#balisage2022&#10;&#10;&#10;AR: Interested in how markup terminology has evolved and how that reflects changes in practice and attitudes&#10;#balisage2022&#10;&#10;AR: Terms of particular interest (roughly synonymous*)&#10;descriptive markup / procedural markup&#10;semantic  markup / presentational markup&#10;logical / physical&#10;structural, declarative, logical, content, conceptual, generic,...&#10;#balisage2022&#10;&#10;AR: looking at occurrences on web and in Google scholar and differences between them&#10;&#10;#balisage2022&#10;&#10;AR: and looking at occurrences over time for various bigrams in Gscholar&#10;#balisage2022&#10;&#10;AR: And in G-Ngrams&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Human Readability of Data Files&#10;Michael Robert Gryk&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Recap of STAR format&#10;Thinking now about human readability: how do we define that?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Shows various examples of formats called &amp;quot;human readable&amp;quot; sans definitions&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Look at readability in the context of human texts, e.g.Flesch metric based on average sentent length, number of affixes, number of references to people&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Developed to &amp;quot;reading ease&amp;quot; based on average words per sentence, average syllables per word&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Take this idea and apply to data formats? How?&#10;Analogy to sentences, words, syllables?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: In STAR: names/identifiers, data values, comments, syntactical constructs&#10;What to count? Identifiers: more is better?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: For syntax elements, seems less is better&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: characters in data names + value divided by total characters (minus whitespace and comments)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Tricky areas&#10;comments, white space&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MG: Issues/pain points&#10;Comments: ignore because JSON has no comments, so made it not comparable&#10;Commented-out code wrt readability?&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 17:58:20 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554889417600315393</link>
			<guid>https://twitter.com/mathling/status/1554889417600315393</guid>
			<source:markdown>Human Readability of Data Files&#10;Michael Robert Gryk&#10;&#10;#balisage2022&#10;&#10;&#10;MG: Recap of STAR format&#10;Thinking now about human readability: how do we define that?&#10;#balisage2022&#10;&#10;MG: Shows various examples of formats called &quot;human readable&quot; sans definitions&#10;#balisage2022&#10;&#10;MG: Look at readability in the context of human texts, e.g.Flesch metric based on average sentent length, number of affixes, number of references to people&#10;#balisage2022&#10;&#10;MG: Developed to &quot;reading ease&quot; based on average words per sentence, average syllables per word&#10;#balisage2022&#10;&#10;MG: Take this idea and apply to data formats? How?&#10;Analogy to sentences, words, syllables?&#10;#balisage2022&#10;&#10;MG: In STAR: names/identifiers, data values, comments, syntactical constructs&#10;What to count? Identifiers: more is better?&#10;#balisage2022&#10;&#10;MG: For syntax elements, seems less is better&#10;#balisage2022&#10;&#10;MG: characters in data names + value divided by total characters (minus whitespace and comments)&#10;#balisage2022&#10;&#10;MG: Tricky areas&#10;comments, white space&#10;#balisage2022&#10;&#10;MG: Issues/pain points&#10;Comments: ignore because JSON has no comments, so made it not comparable&#10;Commented-out code wrt readability?&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@divclassbutton &lt;a href=&quot;https://t.co/yO5Xc6dRlV&quot;&gt;https://t.co/yO5Xc6dRlV&lt;/a&gt;&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 14:00:45 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554829629281615872</link>
			<guid>https://twitter.com/mathling/status/1554829629281615872</guid>
			<source:markdown>@divclassbutton https://t.co/yO5Xc6dRlV&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Migrating DocBook to Uncharted Waters&#10;Ari Nordström, Jean Kaplansky&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: The quest&#10;Migrate 50GB of MathML heavy DocBook, update, normalize, move to LMS, ...&lt;/p&gt;&#10;&lt;p&gt;on a short time frame&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: XIncludes, weird Arbortext PIs, MathML, entities upon top of entities&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[A case study in technological archaeology]&lt;/p&gt;&#10;&lt;p&gt;JK: Problem finding someone to help take on this quest&lt;/p&gt;&#10;&lt;p&gt;Eventually got to Ari&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: &amp;quot;This should be easy&amp;quot;&#10;DocBook 4.0 =&amp;gt; 4.3 =&amp;gt; XHTML&#10;&amp;quot;Pipelines!&amp;quot;&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: Let&amp;#39;s talk about clean up&lt;/p&gt;&#10;&lt;p&gt;Normalize&#10;Tweak&#10;Encode (=&amp;gt;UTF8)&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: Normalization&#10;Pull in XInclude links, add targets to xproc filter to skip the included links&#10;Easy, right?&lt;/p&gt;&#10;&lt;p&gt;Um... source has its own file protocol URIs&#10;With lots of extra characters &lt;/p&gt;&#10;&lt;p&gt;So... file renaming step which also needs to fix the refs&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: Encoding&#10;Just serialize XML in UTF-8&lt;/p&gt;&#10;&lt;p&gt;Uh: XIncluded bits included decades of character entities, but with DOCTYPEs that defined them commented out and the commented out things had wrong names...&lt;/p&gt;&#10;&lt;p&gt;So: Use TagSoup to add in right DOCTYPEs&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: New issues with those fragments where things depended on context, so needed more complicated plan&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: Complications on top of complications&lt;/p&gt;&#10;&lt;p&gt;[Isn&amp;#39;t it ever thus? Everything is always more complicated than you can possibly imagine.]&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: Ended up doing a lot of pre-conversion as part of fix-ups, ended up with a lot of keep=true to keep DocBook stylesheets from messing with them in weird ways&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;AN: &amp;quot;There were namespace issues&amp;quot;&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;[Evergreen tweet]&lt;/p&gt;&#10;&lt;p&gt;AN: In hindsight I should have done this in XProc 3.0&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: We learned a LOT more than we ever thought:&lt;/p&gt;&#10;&lt;p&gt;Identify ALL stakeholders at start w DIRECT rep participating in project&lt;/p&gt;&#10;&lt;p&gt;Project teams might have own ideas of XML best practices, etc.&lt;/p&gt;&#10;&lt;p&gt;Ensure stakeholder has resources + training&lt;/p&gt;&#10;&lt;p&gt;...&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JK: (Lessons, cont)&lt;/p&gt;&#10;&lt;p&gt;Stakeholders may change priorities in middle, a lot&lt;/p&gt;&#10;&lt;p&gt;Define preferred format for client feedback from the start&lt;/p&gt;&#10;&lt;p&gt;Set expectations FIRMLY from the start&lt;/p&gt;&#10;&lt;p&gt;Set legal/financial aspects BEFORE starting work&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Wed, 03 Aug 2022 13:58:31 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554829067676831746</link>
			<guid>https://twitter.com/mathling/status/1554829067676831746</guid>
			<source:markdown>Migrating DocBook to Uncharted Waters&#10;Ari Nordström, Jean Kaplansky&#10;&#10;#balisage2022&#10;&#10;&#10;JK: The quest&#10;Migrate 50GB of MathML heavy DocBook, update, normalize, move to LMS, ...&#10;&#10;on a short time frame&#10;&#10;#balisage2022&#10;&#10;JK: XIncludes, weird Arbortext PIs, MathML, entities upon top of entities&#10;&#10;#balisage2022&#10;&#10;[A case study in technological archaeology]&#10;&#10;JK: Problem finding someone to help take on this quest&#10;&#10;Eventually got to Ari&#10;&#10;#balisage2022&#10;&#10;AN: &quot;This should be easy&quot;&#10;DocBook 4.0 =&amp;gt; 4.3 =&amp;gt; XHTML&#10;&quot;Pipelines!&quot;&#10;&#10;#balisage2022&#10;&#10;AN: Let's talk about clean up&#10;&#10;Normalize&#10;Tweak&#10;Encode (=&amp;gt;UTF8)&#10;&#10;#balisage2022&#10;&#10;AN: Normalization&#10;Pull in XInclude links, add targets to xproc filter to skip the included links&#10;Easy, right?&#10;&#10;Um... source has its own file protocol URIs&#10;With lots of extra characters&#10;&#10;So... file renaming step which also needs to fix the refs&#10;#balisage2022&#10;&#10;AN: Encoding&#10;Just serialize XML in UTF-8&#10;&#10;Uh: XIncluded bits included decades of character entities, but with DOCTYPEs that defined them commented out and the commented out things had wrong names...&#10;&#10;So: Use TagSoup to add in right DOCTYPEs&#10;&#10;#balisage2022&#10;&#10;AN: New issues with those fragments where things depended on context, so needed more complicated plan&#10;&#10;#balisage2022&#10;&#10;AN: Complications on top of complications&#10;&#10;[Isn't it ever thus? Everything is always more complicated than you can possibly imagine.]&#10;&#10;#balisage2022&#10;&#10;AN: Ended up doing a lot of pre-conversion as part of fix-ups, ended up with a lot of keep=true to keep DocBook stylesheets from messing with them in weird ways&#10;&#10;#balisage2022&#10;&#10;AN: &quot;There were namespace issues&quot;&#10;&#10;#balisage2022&#10;&#10;[Evergreen tweet]&#10;&#10;AN: In hindsight I should have done this in XProc 3.0&#10;&#10;#balisage2022&#10;&#10;JK: We learned a LOT more than we ever thought:&#10;&#10;Identify ALL stakeholders at start w DIRECT rep participating in project&#10;&#10;Project teams might have own ideas of XML best practices, etc.&#10;&#10;Ensure stakeholder has resources + training&#10;&#10;...&#10;&#10;#balisage2022&#10;&#10;JK: (Lessons, cont)&#10;&#10;Stakeholders may change priorities in middle, a lot&#10;&#10;Define preferred format for client feedback from the start&#10;&#10;Set expectations FIRMLY from the start&#10;&#10;Set legal/financial aspects BEFORE starting work&#10;&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;XML in an AsciiDoc World: SaxonJS to the Rescue (LB)&#10;Evan Lenz&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EL: Boost documentation.&#10;Toolchain: Doxygen + bjam + docca&#10;Final output is Quickbook (markdown-type language) =&amp;gt; BoostBook =&amp;gt; DocBook =&amp;gt; XSLT (via XSLT 1.0 + xsltproc)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EL: Some C++ devs switching to AsciiDoc&#10;How to get the nice styling?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;EL: Found tool Antora, which runs on Node.js&#10;Has been some desire to remove Java from toolchain, let&amp;#39;s use SaxonJS to make the AsciiDoc to fees to Antora&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 19:00:46 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554542743841517568</link>
			<guid>https://twitter.com/mathling/status/1554542743841517568</guid>
			<source:markdown>XML in an AsciiDoc World: SaxonJS to the Rescue (LB)&#10;Evan Lenz&#10;#balisage2022&#10;&#10;&#10;EL: Boost documentation.&#10;Toolchain: Doxygen + bjam + docca&#10;Final output is Quickbook (markdown-type language) =&amp;gt; BoostBook =&amp;gt; DocBook =&amp;gt; XSLT (via XSLT 1.0 + xsltproc)&#10;#balisage2022&#10;&#10;EL: Some C++ devs switching to AsciiDoc&#10;How to get the nice styling?&#10;#balisage2022&#10;&#10;EL: Found tool Antora, which runs on Node.js&#10;Has been some desire to remove Java from toolchain, let's use SaxonJS to make the AsciiDoc to fees to Antora&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Updates on Active Markup-Related Specifications&#10;Patrick Durusau, David Maus, Steven Pemberton, Norm Tovey-Walsh, Robert Wheeler&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;PD: Update on Open Document Format&lt;/p&gt;&#10;&lt;p&gt;Plus wisdom on &amp;quot;referential backwards compatibility&amp;quot; [shudder]&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;DM: Update on Schematron&lt;/p&gt;&#10;&lt;p&gt;3rd edition ISO standard added XSLT 3/XPath 3 in 2020, but no longer freely available [thanks for nothing ISO] and no longer a working group there&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;SP: Update on XForms&#10;Living standard, active group; many small tweaks to make life easier&#10;Now unbound from XPath version&#10;Embedded controls work like normal controls&#10;#balisage2020&lt;/p&gt;&#10;&lt;p&gt;NTW: XSLT 4.0 (+XPath/XQuery/F&amp;amp;O)&#10;Various new things&#10;New defaults, records, simpler named templates, switch instruction, mode improvements, syntax tweaks, functions, etc.&#10;Long list of suggestions&#10;Call to action: rekicking community group&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RW: NISO STS Update&lt;/p&gt;&#10;&lt;p&gt;STS=XML format for standards documents, based on JATS + ISOSTS 1.1&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Up #balisage2022 that is&lt;/p&gt;&#10;&lt;p&gt;Sorry for the fat finger typos&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 18:03:11 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554528250734444545</link>
			<guid>https://twitter.com/mathling/status/1554528250734444545</guid>
			<source:markdown>Updates on Active Markup-Related Specifications&#10;Patrick Durusau, David Maus, Steven Pemberton, Norm Tovey-Walsh, Robert Wheeler&#10;#balisage2022&#10;&#10;&#10;PD: Update on Open Document Format&#10;&#10;Plus wisdom on &quot;referential backwards compatibility&quot; [shudder]&#10;&#10;#balisage2022&#10;&#10;DM: Update on Schematron&#10;&#10;3rd edition ISO standard added XSLT 3/XPath 3 in 2020, but no longer freely available [thanks for nothing ISO] and no longer a working group there&#10;&#10;#balisage2022&#10;&#10;SP: Update on XForms&#10;Living standard, active group; many small tweaks to make life easier&#10;Now unbound from XPath version&#10;Embedded controls work like normal controls&#10;#balisage2020&#10;&#10;NTW: XSLT 4.0 (+XPath/XQuery/F&amp;amp;O)&#10;Various new things&#10;New defaults, records, simpler named templates, switch instruction, mode improvements, syntax tweaks, functions, etc.&#10;Long list of suggestions&#10;Call to action: rekicking community group&#10;#balisage2022&#10;&#10;RW: NISO STS Update&#10;&#10;STS=XML format for standards documents, based on JATS + ISOSTS 1.1&#10;&#10;#balisage2022&#10;&#10;Up #balisage2022 that is&#10;&#10;Sorry for the fat finger typos&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Designing for Change: Pragmas as an Extensibility Mechanism for Invisible XML&#10;Tomos Hillman, C. M. Sperberg-McQueen, Bethan Tovey-Walsh, Norm Tovey-Walsh&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Two precepts&lt;/p&gt;&#10;&lt;ol&gt;&#10;&lt;li&gt;There are rules for a reason&lt;/li&gt;&#10;&lt;li&gt;Question authority&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Want a way to break the rules without imposing our mistakes on the world, a way to innovate but still maintain the standard&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Pragmas: give instructions to processor, generally out of scope of language semantics&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;BTW: Our proposal for iXML pragmas is NOT official at this point&lt;/p&gt;&#10;&lt;p&gt;Pragmas will be ignored by pragma-unaware processors; will be understood by processor that understands that particular pragma&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Example&#10;Pragma is specially structured comment&#10;{[pragma]} vs {normal comment}&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Naming&#10;Special reserved pragma: {[+pragma myPragma &amp;quot;&lt;a href=&quot;https://t.co/C6tzMGlzma&amp;quot;%5D%7D&quot;&gt;https://t.co/C6tzMGlzma&amp;quot;]}&lt;/a&gt; sets the name to namespace association&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Various examples: renaming, make this a token, resolving ambiguity&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Experimental pragma that became part of the language: insertions&#10;One goal is to provide mechanism to experiment with things to see how they work&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;NTW: Several implementors are working on this; mine implements several. Next step is to turn paper into spec&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Q: iXML spec has several extra-grammatical constraints&#10;Would these be good candidates for pragmatization?&#10;A: Yes, possibly, not sure of details&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Q: Fan of extensibility, but worried about interoperability. By definition not interoperable. Don&amp;#39;t see advantage of adding this to language.&#10;A: There are things that shouldn&amp;#39;t be part of language, e.g. ambiguity. Things making sense to particular processors...&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;... Also, if there need to be ways to communicate things to processor, better to have one way than multiple ways.&#10;Believe there are those cases,there are limits to what iXML can express and may WANT different behaviours&#10;[[a debate that will continue; good points on both sides]]&lt;/p&gt;&#10;&lt;p&gt;MSM A: Why not bring use cases not pragma? Because most such proposals cannot be implemented. Having a proof-of-implementation short-circuits those debates.&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;MSM continues: analogy with Private Use areas in Unicode&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;JL: Another use, for annotating grammar for when you project it into a different kind of grammar. That&amp;#39;s what I&amp;#39;ve been using it for.&#10;A: I have notion of using annotation to add DC metadata to grammar&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 16:01:13 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554497557300056064</link>
			<guid>https://twitter.com/mathling/status/1554497557300056064</guid>
			<source:markdown>Designing for Change: Pragmas as an Extensibility Mechanism for Invisible XML&#10;Tomos Hillman, C. M. Sperberg-McQueen, Bethan Tovey-Walsh, Norm Tovey-Walsh&#10;#balisage2022&#10;&#10;&#10;BTW: Two precepts&#10;1. There are rules for a reason&#10;2. Question authority&#10;&#10;#balisage2022&#10;&#10;BTW: Want a way to break the rules without imposing our mistakes on the world, a way to innovate but still maintain the standard&#10;&#10;#balisage2022&#10;&#10;Pragmas: give instructions to processor, generally out of scope of language semantics&#10;&#10;#balisage2022&#10;&#10;BTW: Our proposal for iXML pragmas is NOT official at this point&#10;&#10;Pragmas will be ignored by pragma-unaware processors; will be understood by processor that understands that particular pragma&#10;&#10;#balisage2022&#10;&#10;NTW: Example&#10;Pragma is specially structured comment&#10;{[pragma]} vs {normal comment}&#10;&#10;#balisage2022&#10;&#10;NTW: Naming&#10;Special reserved pragma: {[+pragma myPragma &quot;https://t.co/C6tzMGlzma&quot;]} sets the name to namespace association&#10;&#10;#balisage2022&#10;&#10;NTW: Various examples: renaming, make this a token, resolving ambiguity&#10;&#10;#balisage2022&#10;&#10;NTW: Experimental pragma that became part of the language: insertions&#10;One goal is to provide mechanism to experiment with things to see how they work&#10;#balisage2022&#10;&#10;NTW: Several implementors are working on this; mine implements several. Next step is to turn paper into spec&#10;#balisage2022&#10;&#10;Q: iXML spec has several extra-grammatical constraints&#10;Would these be good candidates for pragmatization?&#10;A: Yes, possibly, not sure of details&#10;#balisage2022&#10;&#10;Q: Fan of extensibility, but worried about interoperability. By definition not interoperable. Don't see advantage of adding this to language.&#10;A: There are things that shouldn't be part of language, e.g. ambiguity. Things making sense to particular processors...&#10;#balisage2022&#10;&#10;... Also, if there need to be ways to communicate things to processor, better to have one way than multiple ways.&#10;Believe there are those cases,there are limits to what iXML can express and may WANT different behaviours&#10;[[a debate that will continue; good points on both sides]]&#10;&#10;MSM A: Why not bring use cases not pragma? Because most such proposals cannot be implemented. Having a proof-of-implementation short-circuits those debates.&#10;&#10;#balisage2022&#10;&#10;MSM continues: analogy with Private Use areas in Unicode&#10;&#10;#balisage2022&#10;&#10;JL: Another use, for annotating grammar for when you project it into a different kind of grammar. That's what I've been using it for.&#10;A: I have notion of using annotation to add DC metadata to grammar&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;BITS for Government Information?&#10;Ravit H. David&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Scholars Portal E-books Service&#10;Recent redesign: what metadata standard to use?&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Load information from various publishers, various formats, various XML vocabularies, various metadata&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: BITS=book interchange tags format (cousin to JATS)&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: BITS is focused on scientific/technical books&#10;Government information is a bit of a stretch&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: For government information in mixed archive, need book type info plus second level information of subtype&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: Gov vs corporate author: richer information about source author/orgnanization/ministry/department&#10;publisher=&amp;quot;Queen&amp;#39;s Printer&amp;quot; is not very informative&#10;various contributors and collaborators in play &amp;quot;in cooperation with&amp;quot;, &amp;quot;prepared by&amp;quot;, etc.&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;RD: More complexity: different metadata associated with different parts of the digitization process and wrt the print version of the report&#10;Important to be able to record this&#10;Also want to know creator/provenance of metadata too&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 15:03:32 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554483040490962944</link>
			<guid>https://twitter.com/mathling/status/1554483040490962944</guid>
			<source:markdown>BITS for Government Information?&#10;Ravit H. David&#10;#balisage2022&#10;&#10;&#10;RD: Scholars Portal E-books Service&#10;Recent redesign: what metadata standard to use?&#10;#balisage2022&#10;&#10;RD: Load information from various publishers, various formats, various XML vocabularies, various metadata&#10;&#10;#balisage2022&#10;&#10;RD: BITS=book interchange tags format (cousin to JATS)&#10;&#10;#balisage2022&#10;&#10;RD: BITS is focused on scientific/technical books&#10;Government information is a bit of a stretch&#10;&#10;#balisage2022&#10;&#10;RD: For government information in mixed archive, need book type info plus second level information of subtype&#10;&#10;#balisage2022&#10;&#10;RD: Gov vs corporate author: richer information about source author/orgnanization/ministry/department&#10;publisher=&quot;Queen's Printer&quot; is not very informative&#10;various contributors and collaborators in play &quot;in cooperation with&quot;, &quot;prepared by&quot;, etc.&#10;&#10;#balisage2022&#10;&#10;RD: More complexity: different metadata associated with different parts of the digitization process and wrt the print version of the report&#10;Important to be able to record this&#10;Also want to know creator/provenance of metadata too&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;@mdubinko King of Whova, we salute you&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 14:30:50 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554474812630011905</link>
			<guid>https://twitter.com/mathling/status/1554474812630011905</guid>
			<source:markdown>@mdubinko King of Whova, we salute you&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Getting Useful XML out of Microsoft Excel&#10;Gayanthika Udeshani&lt;/p&gt;&#10;&lt;p&gt; #balisage2022&lt;/p&gt;&#10;&lt;p&gt;XProc: XSLX =&amp;gt; XSLT =&amp;gt; CALS, SVG &lt;/p&gt;&#10;&lt;p&gt;(Demo)&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;Input parameters to identify sheet name and cell range&#10;Use XSLT 3.0 xsl:iterate to calculate total width&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Complications&#10;Formatting, hidden cells, orientation, conditional formatting, date/time formatting,...&lt;/p&gt;&#10;&lt;p&gt;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Lots of indirection: cell references font id 1, which is elsewhere in structure&#10;#balisage2022&lt;/p&gt;&#10;&lt;p&gt;GU: Charts to SVG&#10;e.g. line chart, use svg:path, etc.&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Tue, 02 Aug 2022 14:02:38 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554467714311536642</link>
			<guid>https://twitter.com/mathling/status/1554467714311536642</guid>
			<source:markdown>Getting Useful XML out of Microsoft Excel&#10;Gayanthika Udeshani&#10;&#10;#balisage2022&#10;&#10;&#10;XProc: XSLX =&amp;gt; XSLT =&amp;gt; CALS, SVG&#10;&#10;(Demo)&#10;#balisage2022&#10;&#10;Input parameters to identify sheet name and cell range&#10;Use XSLT 3.0 xsl:iterate to calculate total width&#10;&#10;#balisage2022&#10;&#10;GU: Complications&#10;Formatting, hidden cells, orientation, conditional formatting, date/time formatting,...&#10;&#10;#balisage2022&#10;&#10;GU: Lots of indirection: cell references font id 1, which is elsewhere in structure&#10;#balisage2022&#10;&#10;GU: Charts to SVG&#10;e.g. line chart, use svg:path, etc.&#10;#balisage2022&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		<item>
			<description>&lt;p&gt;Bloody hell why can&amp;#39;t things just work&#10;Just spent last 20 minutes getting my sound working again&#10;It broke after I touched precisely NOTHING&lt;/p&gt;&#10;&lt;p&gt;Grrrrrr&#10;#balisage2022&lt;/p&gt;&#10;</description>
			<pubDate>Mon, 01 Aug 2022 19:12:35 GMT</pubDate>
			<link>https://twitter.com/mathling/status/1554183328349048832</link>
			<guid>https://twitter.com/mathling/status/1554183328349048832</guid>
			<source:markdown>Bloody hell why can't things just work&#10;Just spent last 20 minutes getting my sound working again&#10;It broke after I touched precisely NOTHING&#10;&#10;Grrrrrr&#10;#balisage2022&#10;&#10;&#10;</source:markdown>
			<source:account service="twitter">mathling</source:account>
			</item>
		</channel>
	</rss>
